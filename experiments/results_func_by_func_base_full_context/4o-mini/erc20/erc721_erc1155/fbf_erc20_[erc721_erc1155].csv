run,time_taken,iterations,verified,annotated_contract,function_status,status,threads
1,391.18684816360474,18,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition true
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition _allowed[_from][msg.sender] >= __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _from == _to
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _from == _to
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition __verifier_old_uint(_allowed[msg.sender][_spender]) == _allowed[msg.sender][_spender] || __verifier_old_uint(_allowed[msg.sender][_spender]) != _value
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == remaining
    /// @notice postcondition remaining <= __verifier_old_uint(_allowed[_owner][_spender])
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_OV32Z5R12pNd1munJOXaNeKk', 'thread_cpExqLj7BnTVhcLytU69oVnB', 'thread_nWLtBxzIo9NPxxj7WR3qWcqa', 'thread_ipOKpRVRec3poC0I1bCa76wn', 'thread_EsWIe3uytMn5qkMS0kQju1G3', 'thread_71ReBdpwqjJmZJGkskBLev3s']"
2,453.0944468975067,22,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender])
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _balances[_to] == __verifier_old_uint(_balances[_to])
    /// @notice postcondition __verifier_old_uint(_balances[msg.sender]) >= _value
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition __verifier_old_uint(_allowed[msg.sender][_spender]) != _value || _allowed[msg.sender][_spender] == _value
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Verified', 'transferFrom': 'Failed', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_8nontRuVqPNVAXjhiVPVsJE4', 'thread_MVNlUvrjimUXQ1dpsOeINuqH', 'thread_xioeWxUBkmNeX0Lu12kxYyGQ', 'thread_I8msI8EW263IP868f4aaHam4', 'thread_eAiadsRziO1r2aelrMeA3buq', 'thread_FtUo0NlStW8K1BMEvBxYs8AT']"
3,356.932674407959,18,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender])
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _balances[_to] == __verifier_old_uint(_balances[_to])
    /// @notice postcondition _to != address(0)
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition _allowed[_from][msg.sender] >= __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _from == _to
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _from == _to
    /// @notice postcondition _from != _to || _balances[_from] == __verifier_old_uint(_balances[_from])
    /// @notice postcondition _from != _to || _balances[_to] == __verifier_old_uint(_balances[_to])
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || __verifier_old_uint(_allowed[msg.sender][_spender]) != 0
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == remaining
    /// @notice postcondition remaining <= __verifier_old_uint(_allowed[_owner][_spender])
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Verified', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_QkPhsd9YnueDAtw3T44S6HJt', 'thread_AQBVZ7bhG9Ku3gqP8MNUj1dT', 'thread_XGFvC1hgyTuEiq6INe4uILwk', 'thread_xl8K2DoixCfkjfNgr16PAcUk', 'thread_rZXqWTMxVpVVTTL01eOBvFgM', 'thread_UO6ZjXmTX18afBQ82g31liFy']"
4,636.0877819061279,33,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition true
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition __verifier_old_uint(_allowed[_from][msg.sender]) >= _value
    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _from == _to
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _from == _to
    /// @notice postcondition _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value || _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender])
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == remaining
    /// @notice postcondition remaining <= __verifier_old_uint(_allowed[_owner][_spender])
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Verified', 'approve': 'Failed', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_D9mpfhGY8p3ZpKUa6OtP8ryV', 'thread_3ehD0RDDcT1pWkYa5X0AIVWL', 'thread_vqvDm4QPCDwIGGC9LS6pjchI', 'thread_3EN4bUG3jocDrkmZIacUeqSC', 'thread_PnXkdkihrPh6kb8dFk3RBEAB', 'thread_2H8IUbWzE2dmI1f2S7GsZOjR']"
5,342.93440341949463,18,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender])
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _balances[_to] == __verifier_old_uint(_balances[_to])
    /// @notice postcondition _to != address(0)
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition __verifier_old_uint(_allowed[msg.sender][_spender]) == _value || __verifier_old_uint(_allowed[msg.sender][_spender]) != _value
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Verified', 'transferFrom': 'Failed', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_8p0AJ042TZCq9KpmpPYsqUkv', 'thread_0mfkiNSYCd0qtJlEOWKDPokH', 'thread_yZVmftczbFX6BtR1hzrzEchy', 'thread_9NAD60egWDoX7kqKQTTifA09', 'thread_pqBhMwEq5bKnT5Q4SX9whzN4', 'thread_vXsegIOl2pVyGrfu31RSW9QL']"
6,547.7452313899994,27,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition true
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    /// @notice postcondition _from == _to || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value
    /// @notice postcondition _from == _to || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value
    /// @notice postcondition __verifier_old_uint(_allowed[_from][msg.sender]) >= _value
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == remaining
    /// @notice postcondition remaining <= __verifier_old_uint(_allowed[_owner][_spender])
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Verified', 'approve': 'Failed', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_Jz6U9HQuZyVYWQmLkeanonm3', 'thread_WBxWz0ZTTMYZVKlh6kyRSz4G', 'thread_eBrSb2jMI05rcsKyWJbV1w7r', 'thread_rlrajqjfHfPgZfhGVr1bVO7J', 'thread_JxaYILlrGTmZNeFy4Ntc6pfY', 'thread_hELdES1r9sDXR7BripUsbm17']"
7,477.2790529727936,28,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition true
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    /// @notice postcondition _from != address(0) && _to != address(0)
    /// @notice postcondition __verifier_old_uint(_balances[_from]) >= _value
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + (_from != _to ? _value : 0)
    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - (_from != _to ? _value : 0)
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == remaining
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Verified', 'approve': 'Failed', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_ESGrpvzWb7vI6fGJmuC9uIOM', 'thread_MIv8opfIJxXXeLmZzF3dL1oH', 'thread_I5jokuEO4UnB0INLGrgzFsxO', 'thread_W8wSLWRk9SnEuVpeIAshBsP4', 'thread_j4LFqv27TzA0fmyw810ViltI', 'thread_WiWosWl4XdIltm7jY1mKPUKG']"
8,574.3844830989838,34,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition true
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == remaining
    /// @notice postcondition remaining <= __verifier_old_uint(_allowed[_owner][_spender])
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Failed', 'approve': 'Failed', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_OUI54F9WAYnlBgOXUKzASo14', 'thread_sTUYKweUkAtviMmM5GcunOAC', 'thread_7xtIyTFBBsAG0Lwlg1MVFekm', 'thread_OyqTh9CzYgYMRTbz3M01dHqg', 'thread_lbPJ3gLuZEGAojBvfaIZgsMT', 'thread_ZBcTpVs2jSGowOYRuhMZusD6']"
9,294.0114367008209,17,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition true
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition __verifier_old_uint(_balances[_from]) >= _value
    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _from == _to
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _from == _to
    /// @notice postcondition _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition !(msg.sender == _spender) || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender])
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_PKULVPUSC35g3cYOwqO2Y130', 'thread_FJnQUt13xuKafqb6l005u6xv', 'thread_WDTMdWAVyniQtilY6XeD5Wou', 'thread_wbt0RqH5bzwSTRPtS9wLSAIH', 'thread_GYuLLoninQbACumorK40HFIc', 'thread_T8GmsM6B2LTWhHhTINEVESZS']"
10,592.7943069934845,33,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition true
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Failed', 'approve': 'Failed', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_P09T1g7EnS2wF8iheT3IETSa', 'thread_AQ20gx7HNXkdmH9vOle2LNbp', 'thread_iA3iFOAHB50yqdsMhk3o7Ycw', 'thread_PgTdxnoqEuIix8IXBD3401OS', 'thread_YmTfW083m1iDQ8PqmqjZcBOq', 'thread_jYVN8YWOzkX2aatRVj8h1flZ']"
