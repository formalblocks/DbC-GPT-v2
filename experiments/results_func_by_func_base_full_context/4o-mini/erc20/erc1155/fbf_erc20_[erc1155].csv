run,time_taken,iterations,verified,annotated_contract,function_status,status,threads
1,1326.0783641338348,28,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition false
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition __verifier_old_uint(_balances[_from]) >= _value
    /// @notice postcondition _from == _to || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value
    /// @notice postcondition _to == _from || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value
    /// @notice postcondition _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value || _allowed[_from][msg.sender] == 0
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition __verifier_old_uint(_allowed[msg.sender][_spender]) == _allowed[msg.sender][_spender] || __verifier_old_uint(_allowed[msg.sender][_spender]) != _value
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition false
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == remaining
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Failed', 'allowance': 'Verified'}",[],"['thread_I5Fn7sLiSAIu8dStAiJ1Iii2', 'thread_Wldzc1effu9DtPlmWaLYD8GS', 'thread_kb0DBZVepqT85IONCF1VehTC', 'thread_6YEwfzAsXlO6rZrDCAsUbdoJ', 'thread_BC1LowvaD8Z9qyvQIdWU5YLA', 'thread_0PJ5eSf6ujvsJxmN0fOSH6hT']"
2,1227.893464565277,29,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition false
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition __verifier_old_uint(_balances[_from]) >= _value
    /// @notice postcondition _from == _to || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _balances[_to] == __verifier_old_uint(_balances[_to])
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition __verifier_old_uint(_allowed[msg.sender][_spender]) == _allowed[msg.sender][_spender] || success == true
    /// @notice postcondition success == true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition false
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Failed', 'allowance': 'Verified'}",[],"['thread_Np9dwbXdDAby2SXLg0mpKo5E', 'thread_rjTBi2Sb4CluINrsE0zVx1Wv', 'thread_B0KxzHyoxMsEpt9irFPPPcXd', 'thread_4N8XHQyHHsrSibvDeHG0qm7N', 'thread_9rtUtNTRMk12gNwIN5IHBa7b', 'thread_qjOEZ4SVAUYYRQppYIuRFegv']"
3,1682.904179573059,42,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition false
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition false
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition false
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition false
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Failed', 'approve': 'Failed', 'balanceOf': 'Failed', 'allowance': 'Verified'}",[],"['thread_uc0a91Jm2AX1c1byiQWW5WAM', 'thread_M4b6R3j9fh4uezsg0IZkZRrZ', 'thread_UW4wSi92Ca515lEvaHCecakb', 'thread_glGRR4Kiq6mCqrQgQZd9SrCq', 'thread_fGn02eHDNuGGn5D10CplKp31', 'thread_4kQi2KeVlOrRRiFkCEJIls1a']"
4,1273.9437127113342,34,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition false
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition _allowed[_from][msg.sender] >= __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    /// @notice postcondition __verifier_old_uint(_balances[_from]) >= _value
    /// @notice postcondition _from == _to || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value
    /// @notice postcondition _from == _to || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value
    /// @notice postcondition success == true
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition false
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition false
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Verified', 'approve': 'Failed', 'balanceOf': 'Failed', 'allowance': 'Verified'}",[],"['thread_z5YofmbivKliJpSRYRQTdYXA', 'thread_qUeNKuCoORzvtV20ePxHOpyg', 'thread_xcKzWHc9UCL8IW4XYzSDLMYZ', 'thread_sjkFIhBU5MVQrNpKwaCw1wcH', 'thread_nhw2LLncCxOJvfXbeDdYV4H4', 'thread_ydekOrwvI8Pe81Oa0YP3Bmul']"
5,1672.1544635295868,42,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition false
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition false
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition false
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition false
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == __verifier_old_uint(_allowed[_owner][_spender])
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Failed', 'approve': 'Failed', 'balanceOf': 'Failed', 'allowance': 'Verified'}",[],"['thread_mMoBNhTUPkAELwKTM013JpH6', 'thread_XciJzmocgx5pOlSOKmwCXduT', 'thread_q6nA9GHAOwa5poROlwM1ZrXp', 'thread_9Y2gnDNtdYAHSkPUmRDpnzLS', 'thread_pQWuag1MGzt6GZjaUQ1H3duG', 'thread_JnWUQZNvGFF8YDA8jCuTEzHc']"
6,750.36123919487,27,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition false
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition _allowed[_from][msg.sender] >= __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    /// @notice postcondition __verifier_old_uint(_balances[_from]) >= _value
    /// @notice postcondition _from == _to || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value
    /// @notice postcondition _from == _to || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value
    /// @notice postcondition _balances[_from] >= 0
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + (_from != _to ? _value : 0)
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition __verifier_old_uint(_allowed[msg.sender][_spender]) == _allowed[msg.sender][_spender] || success == true
    /// @notice postcondition success == true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition false
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Failed', 'allowance': 'Verified'}",[],"['thread_TygQPjrt8h0XOVcoZHOzJVc2', 'thread_vJLu15Izr4UeXzJg3DZ4p2dD', 'thread_zHcV8zLJFJUs36NK8yyzTdhZ', 'thread_iLxZEx4YRS5sXh6yMe4kS986', 'thread_DuvgDrmGDWjt9bn3fY3BcpMx', 'thread_ubTuq383gItocuzcJkn0aRkK']"
7,758.5986778736115,28,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition false
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition __verifier_old_uint(_balances[_from]) >= _value
    /// @notice postcondition _from == _to || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value
    /// @notice postcondition _from == _to || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _balances[_to] == __verifier_old_uint(_balances[_to])
    /// @notice postcondition _allowed[_from][msg.sender] >= __verifier_old_uint(_allowed[_from][msg.sender]) || _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition __verifier_old_uint(_allowed[msg.sender][_spender]) == _allowed[msg.sender][_spender] || __verifier_old_uint(_allowed[msg.sender][_spender]) != _value
    /// @notice postcondition success == true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition false
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Failed', 'allowance': 'Verified'}",[],"['thread_KSxqYnNui6FVZirEfzAsQLr7', 'thread_sI3T4nytBKx9ni0Mco4DiB2y', 'thread_301OXWDm69iXPmiezfA0Z1JR', 'thread_2IB5457huAcXfRqz7eQVVfJf', 'thread_2aFXujZUs7g6MfRobEZPuMji', 'thread_aT1Dzh5EV90f9KZfD6Jg4ZNX']"
8,1187.760590314865,34,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition false
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition _allowed[_from][msg.sender] >= __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    /// @notice postcondition __verifier_old_uint(_balances[_from]) >= _value
    /// @notice postcondition _from == _to || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value
    /// @notice postcondition _from == _to || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value
    /// @notice postcondition forall (address account) account == _from || account == _to || _balances[account] == __verifier_old_uint(_balances[account])
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition false
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition false
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == __verifier_old_uint(_allowed[_owner][_spender])
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Verified', 'approve': 'Failed', 'balanceOf': 'Failed', 'allowance': 'Verified'}",[],"['thread_BPFcYwfy2T20xaJCdxTdTlie', 'thread_9aRMFtl66KhR0dRPZdmSBHUE', 'thread_bM5FSUnqiOZA93wMgz97N96N', 'thread_pgsiry1qjcxGL5VGUdsSHLSx', 'thread_ZPQkOZaWaFomCbJFRvX5dxhL', 'thread_C7XB0ukIstaTEBVpgeN2I4lE']"
9,552.6475710868835,32,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition false
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition _allowed[_from][msg.sender] >= __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    /// @notice postcondition __verifier_old_uint(_balances[_from]) >= _value
    /// @notice postcondition _from == _to || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value
    /// @notice postcondition _from == _to || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value
    /// @notice postcondition success == true
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition success == true
    /// @notice postcondition __verifier_old_uint(_allowed[msg.sender][_spender]) != _value || _allowed[msg.sender][_spender] == _value
    /// @notice postcondition _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || _allowed[msg.sender][_spender] == _value
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition false
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == __verifier_old_uint(_allowed[_owner][_spender])
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Failed', 'allowance': 'Verified'}",[],"['thread_k6E2qhVj3o5Fv9hpocxmTTGg', 'thread_evrY6XJJ2GpDIYdbxxIVZb1Y', 'thread_hQQpgW1HPchCqUqXMnn1mlAr', 'thread_lCUVYqczu0Yj9XH7MEKbS8iz', 'thread_oLEaVRAnjpjdehZW7ja1wj73', 'thread_pTy4cv6HYXtxpdaPhe4qx7t5']"
10,393.02245926856995,24,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition false
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition __verifier_old_uint(_balances[_from]) >= _value
    /// @notice postcondition _from == _to || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _from == _to
    /// @notice postcondition _allowed[_from][msg.sender] >= __verifier_old_uint(_allowed[_from][msg.sender]) || _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition __verifier_old_uint(_allowed[msg.sender][_spender]) == _value || __verifier_old_uint(_allowed[msg.sender][_spender]) != _value
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _owner == address(0) || balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_fctoyO0CGRlpAn8ZSFe71oCF', 'thread_IwI9RwpQIyYSL2Itl6MvtoTh', 'thread_LmG7HyGOSTV47e84HNts4KP5', 'thread_U7r4t14SIlU8g06ibep3PmZc', 'thread_DVIeb64Yur5WY3ghTEDecvoB', 'thread_LbkICVYy1yNRFuMCZEmTaXkV']"
