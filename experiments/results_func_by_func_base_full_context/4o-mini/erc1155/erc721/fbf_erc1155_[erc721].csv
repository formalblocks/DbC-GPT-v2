run,time_taken,iterations,verified,annotated_contract,function_status,status,threads
1,598.2093098163605,26,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition true
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition _operatorApprovals[_owner][_operator] == approved
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition ( _from == _to ) || ( _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value )
    /// @notice postcondition ( _from == _to ) || ( _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value )
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition true
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Failed', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Failed'}",[],"['thread_iphChdCch9pQqsifgpSPMD2e', 'thread_6B71SrGVZR61hYpmM9ZohkQq', 'thread_fEZ0qzPifAsYkHFSh6X2kQU3', 'thread_RwOalELv8RWOnYHmN90DtOgq', 'thread_lAsiDpKzOkJttWgy9gwVEq5m', 'thread_0vrsUEIdV3DiEYgBhXaGMa03']"
2,535.5224049091339,28,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    /// @notice postcondition _owner != address(0)
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition true
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition _operatorApprovals[_owner][_operator] == approved
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition ( _from == _to ) || ( _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value )
    /// @notice postcondition ( _from == _to ) || ( _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value )
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition true
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Failed', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Failed'}",[],"['thread_u6BIBPzJt6ahOoHQhLZj7ub8', 'thread_jqujb0kOLz2aCFmQ7grQyZZZ', 'thread_nlZ7mFLFvqPNcsCUlCZtBV3q', 'thread_w8fDxPn49Q23IaXwnrzhOVUw', 'thread_qxOlmM3qgWoCt5qjwlaUcDlv', 'thread_YFL0qJIMxpYidZqUF3eNRMbO']"
3,624.9070236682892,29,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition true
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition _operatorApprovals[_owner][_operator] == approved
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition (_from == _to) || (_balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value)
    /// @notice postcondition (_from == _to) || (_balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value)
    /// @notice postcondition _to != address(0)
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition true
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Failed', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Failed'}",[],"['thread_ZXwIHXDVvsAp3y3Oxd3pFuEy', 'thread_MioyguhKnKh0Ih90t8tivdQh', 'thread_cScD72hWwurUp5SiEcqbHVmp', 'thread_M9CfQV0AJ5IpB5GWRIaoZATI', 'thread_8cOZ3IuayoEiNyJfiLd4Otgv', 'thread_1CpiFDt5ANbyWUbVVEtWOLPH']"
4,803.1678647994995,38,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition true
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition true
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition !(0 < _value && __verifier_old_uint(_balances[_id][_from]) < _value) || _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value
    /// @notice postcondition !(0 < _value && __verifier_old_uint(_balances[_id][_to]) + _value < __verifier_old_uint(_balances[_id][_to])) || _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition true
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Failed', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Failed', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Failed'}",[],"['thread_SjFm4lbSiwqEfAKZpfB8kwy0', 'thread_2oU2GvjTjp4jjJd5uOqcU2JJ', 'thread_ND7UgGZZZtXZThn9lBA3Rt2I', 'thread_cgZRXniBqpbiuM5sMN6wXHdC', 'thread_fgPfueHmKsPrTC6I8Q289kEx', 'thread_34ZBeQOvBsBkqpkGyeWap9Q1']"
5,659.2968854904175,26,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    /// @notice postcondition _owner != address(0)
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition true
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition _operatorApprovals[_owner][_operator] == approved
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition ( _from == _to ) || ( _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value )
    /// @notice postcondition ( _from == _to ) || ( _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value )
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition true
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Failed', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Failed'}",[],"['thread_9P77pxgYxgSeEzEE0WvsHH8i', 'thread_XyjfKlHDQakPyhAXn3T78yvs', 'thread_UCy9qBakumLLi7ISdSy6yBjF', 'thread_rdwUQs6SrqxEGZ1gdoKtSKYd', 'thread_hYmZZHEjGU3faZvavN38wukg', 'thread_Nvw48FgmrEHjbXciLEkrBaEg']"
6,626.6393258571625,31,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition true
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition _operatorApprovals[_owner][_operator] == approved
    /// @notice postcondition approved == (_operatorApprovals[_owner][_operator] == true)
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition !( __verifier_old_uint(_balances[_id][_from]) < _value ) || _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value
    /// @notice postcondition !( __verifier_old_uint(_balances[_id][_from]) < _value ) || _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition true
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Failed', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Failed'}",[],"['thread_LOUXFrFiLjhVShTqpAG7J2UF', 'thread_hhUjhhv9iYyoCxEIwHMNakxU', 'thread_nspPfN7gLIOIG3Sv1hNLhoI3', 'thread_DKQWbifyCCZSyY0VkPkasnrK', 'thread_UOc7Cb2jUt9zPPbQfeA2dPW8', 'thread_jl0NbhvBFtIwYDKn9Xl8cfi7']"
7,659.7551546096802,28,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition true
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition _operatorApprovals[_owner][_operator] == approved
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition ( _to != address(0) && __verifier_old_uint(_balances[_id][_from]) >= _value ) || ( _to == address(0) )
    /// @notice postcondition ( _to != address(0) && __verifier_old_uint(_balances[_id][_from]) >= _value ) || ( _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) )
    /// @notice postcondition ( _to != address(0) && __verifier_old_uint(_balances[_id][_from]) >= _value ) || ( _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) )
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition true
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Failed', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Failed'}",[],"['thread_syIyxbYbakclrIUXVLhZjNnS', 'thread_3yaEAcztOd5WUlcjUGnvBQVC', 'thread_4v93ySwGbvJ9M959pEq154G8', 'thread_7Y2smQbHnb1ucwKiQekIK3W4', 'thread_tqQo1W7kxLtUgaa3OV3f658M', 'thread_IkNdJX66Nx6p10UrIwgw3GGc']"
8,763.9941954612732,38,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition true
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition _operatorApprovals[_owner][_operator] == approved
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition __verifier_old_uint(_balances[_id][_from]) >= _value
    /// @notice postcondition !( __verifier_old_uint(_balances[_id][_from]) < _value ) || _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value
    /// @notice postcondition !( __verifier_old_uint(_balances[_id][_from]) < _value ) || _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition true
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Failed', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Failed'}",[],"['thread_jvT4wJrwIs1YDu3PVSsZxIRo', 'thread_11IEiSKQr3QMrvDEArb1AA4O', 'thread_NxoSidWSmtvOVGpKZxRs5tU0', 'thread_9gfjv1ULpWc1AmxEBFoQxhjU', 'thread_3F5d6B6AI9XuOVcsNrq2TTzi', 'thread_S6HQPsMLkJiLICp1dUZoohla']"
9,533.6541702747345,26,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition true
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition _operatorApprovals[_owner][_operator] == approved
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition ( _from == _to ) || ( _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value )
    /// @notice postcondition ( _from == _to ) || ( _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value )
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition true
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Failed', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Failed'}",[],"['thread_YWyEkKxkBBLZCq6uAVVIu5Jw', 'thread_TapJdVLeb2i5uPxDqEq2aPSo', 'thread_0DbNn1pPhmGXgyN6Ii4CDOLe', 'thread_GDxndbV72D0kMwPBVoz3HYUO', 'thread_xgnL6XLjqQxs8B9b9LzHJ64s', 'thread_NCVIzrvmc7ecvmN1qSSxS7UZ']"
10,664.6288728713989,26,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition true
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition _operatorApprovals[_owner][_operator] == approved
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition ( _from == _to ) || ( _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value )
    /// @notice postcondition ( _from == _to ) || ( _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value )
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition true
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Failed', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Failed'}",[],"['thread_tWyXGaYCpe6zE3bzbUZels44', 'thread_2GXto7Hupp9VmP5DZnASre8k', 'thread_GPLUyMpSMkddgnuatRYWc5ns', 'thread_A4BqZ1leKnbTfFfZZlkGootn', 'thread_ofH6DN0KRYq0Sqcas02OUtKs', 'thread_CCP85BzUhTQ2kDbpqcsuObBA']"
