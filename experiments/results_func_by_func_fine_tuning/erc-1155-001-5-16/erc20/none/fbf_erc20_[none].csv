run,time_taken,iterations,verified,annotated_contract,function_status,status,threads
1,228.67582488059998,20,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);
    
    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _to == msg.sender
    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || __verifier_old_uint(_balances[msg.sender]) >= _value
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _from == _to
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _value == 0 || _from == _to
    /// @notice postcondition _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) || _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Verified', 'transferFrom': 'Verified', 'approve': 'Failed', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_gxSxOdTeWvyOZMLaXT3VbNPY', 'thread_8ZhIWb6kSDPyOAwwvLUr3ylf', 'thread_1vZXXFe7d2CWefJpQzlhNajx', 'thread_DYzV4z3sRJgVrhaqhaT3AFns', 'thread_g4DHPtY7sTjH2y7ePjPrZMwa', 'thread_0R3hse75TFV91iT3fEqvsHdX']"
2,189.08375096321106,19,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);
    
    // Functions
    /// @notice postcondition true
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _to == msg.sender
    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0 || _to == msg.sender
    /// @notice postcondition _totalSupply == __verifier_old_uint(_totalSupply)
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _to != _from || __verifier_old_uint(_balances[_to]) == _balances[_to]
    /// @notice postcondition _value <= __verifier_old_uint(_allowed[_from][msg.sender]) || __verifier_old_uint(_allowed[_from][msg.sender]) == _allowed[_from][msg.sender] - _value
    /// @notice postcondition _value <= __verifier_old_uint(_balances[_from]) || __verifier_old_uint(_balances[_from]) == _balances[_from]
    /// @notice postcondition _to != _from || _value == 0 || __verifier_old_uint(_balances[_to]) == _balances[_to] || _to == _from
    /// @notice postcondition _to != _from || __verifier_old_uint(_balances[_from]) - _value == _balances[_from] || _to == _from
    /// @notice postcondition forall (uint i) !(0 <= i && i < _value) || _to != _from || __verifier_old_uint(_balances[_to]) == _balances[_to]
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition !(msg.sender == _spender) || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender])
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Failed', 'transfer': 'Verified', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_J9ULL30CuoUnIGmRsiJt7422', 'thread_k1knE532KR1CeoFV1e5FZCVW', 'thread_1MbH8Bzz7hpQg7mYNUbi73YQ', 'thread_A89vIBRPb7xAmGvQSElOlbpA', 'thread_QYe5sTYVnKfxDmsFXPxLu5Ic', 'thread_CUlbd3ntnQ7cXFj1dw687G1M']"
3,107.18774366378784,9,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);
    
    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _to == msg.sender
    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0 || _to == msg.sender
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _balances[_to] == __verifier_old_uint(_balances[_to])
    /// @notice postcondition _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) || _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition success == true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Verified', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_FdA70uzQNRIfsgUV6miLZTjp', 'thread_oyB0KJyNUV1ECSzEpWZ8Rrst', 'thread_Qpnradqeu96aocea9L4x8yLK', 'thread_tk54D5brmkl6ncxuv7IS6kFy', 'thread_NdjTwnNHlVvW1ISHIg47PA3i', 'thread_50LjXnVX8RJTVixDhCk1351y']"
4,180.80076026916504,18,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);
    
    // Functions
    /// @notice postcondition true
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _to == msg.sender || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value
    /// @notice postcondition _to == msg.sender || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value
    /// @notice postcondition _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) || _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition !(msg.sender == _spender) || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender])
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Failed', 'transfer': 'Verified', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_aOwZ2mtYCEeUpkjgYfEvVNBy', 'thread_0sI0vp3XUn4XA9KGl0btt2dN', 'thread_EaJvEhHRXCwesZ912Y5IJNZy', 'thread_Cmn4effkO1fVe8c2gM6xtbzu', 'thread_u05CDbRw2ZX6CdXKrR7OSH2k', 'thread_1kG9z4NFO9nxKKdHwRmRSKdx']"
5,206.97301506996155,18,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);
    
    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _to == msg.sender
    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) || _value == 0 || __verifier_old_uint(_balances[msg.sender]) >= _value
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _value == 0 || _from == _to
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _value == 0 || _from == _to
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Verified', 'transferFrom': 'Verified', 'approve': 'Failed', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_EJ4BO6IS7pPIFygNKczgn5BY', 'thread_Zt6Jml6abMGz8z0MmHcnBgvW', 'thread_kRWvBIYlV658CVa9dJStDxiN', 'thread_RHUfGwKyjIiSR2dq5FuXK6UK', 'thread_JBm2Jg5ZXLBsMKjD3iBJaU4d', 'thread_NCEure64yBtDK9MXAi1DZJTQ']"
6,322.49320244789124,26,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);
    
    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _to == msg.sender
    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0 || _to == msg.sender
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _value == 0 || _from == _to
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _value == 0 || _from == _to
    /// @notice postcondition _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value || _value == 0 || _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender])
    /// @notice postcondition _allowed[_from][msg.sender] >= 0
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Verified', 'transferFrom': 'Verified', 'approve': 'Failed', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_ghEmUAPNU8o3uDlsNi4hetDw', 'thread_G09L3plcu9UjKxUPiPGZEWX6', 'thread_gAtn7XROeFXYSwkkpAtOPHNO', 'thread_ROzmSTS5tLBgkwUoXSZ1VAWf', 'thread_jQIC3kYis198LODejHFAiuBZ', 'thread_HbFUIpmlPcx31S1fVbONDf8f']"
7,114.72388219833374,9,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);
    
    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) || _value == 0
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _balances[_to] == __verifier_old_uint(_balances[_to]) || _value == 0
    /// @notice postcondition forall (address addr) !(addr == msg.sender && addr == _to) || _balances[addr] == __verifier_old_uint(_balances[addr])
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _value == 0 || _balances[_from] == __verifier_old_uint(_balances[_from])
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _value == 0 || _balances[_to] == __verifier_old_uint(_balances[_to])
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition success == true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Verified', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_ua4ldZQD3yx3k34mV71rJ8hy', 'thread_dIQkZkJaouFP9436orNche8v', 'thread_xIi9tmRoD8uHZQ6NYOp3Tw4U', 'thread_k0hqWoicHNUOSLj7sU1I725M', 'thread_qHZ2azI3j59HTpIkAwzWVnag', 'thread_BQHpKwYk2UYASqQz8rcwYrM3']"
8,327.15073013305664,26,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);
    
    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _to == msg.sender
    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0 || _to == msg.sender
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Verified', 'transferFrom': 'Failed', 'approve': 'Failed', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_ZLIDv32GljrAkd4VOyA9z8xy', 'thread_QO1VPXiIEjmU5rAKMJBl54nP', 'thread_CJxfQ7QvUpNSNWFLLtHOpswf', 'thread_NM5fWg91CKJRgziCF22o4rmJ', 'thread_5rpUrNh9YzVeUkfbSmrZA2e8', 'thread_w7KxnL5ZQufqr0CgaL8GlAkG']"
9,288.7398693561554,25,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);
    
    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition true
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value
    /// @notice postcondition _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) || _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Verified', 'approve': 'Failed', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_cH2BnfK3z394hUT5VuQR4n5z', 'thread_1WBaO7SbkRFfnbDcCByjWwze', 'thread_tC5ONzSNSAgOeuLWCWQXEVeM', 'thread_CyuRvn7x6ceQi5ssoo49i07p', 'thread_LyHj7kfLrkcYonZA4uBAl9DK', 'thread_t8XYGt1IE9GgLfG8H8Mo8yAJ']"
10,213.73395776748657,21,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);
    
    // Functions
    /// @notice postcondition true
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _to == msg.sender || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _value == 0
    /// @notice postcondition _to != msg.sender || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _balances[_from] == __verifier_old_uint(_balances[_from])
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _balances[_to] == __verifier_old_uint(_balances[_to])
    /// @notice postcondition _totalSupply == __verifier_old_uint(_totalSupply)
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition success == true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Failed', 'transfer': 'Verified', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_2T8KqqpuR7yE1Z8zSseX1tdB', 'thread_Ggc8GG2lM2jDcTJWooxukK9h', 'thread_V1taRXqsCFvcOsxizlrXfbgD', 'thread_ZqBWCLSVo1kXU73223IBo08F', 'thread_CW5H1fFMZKoyLAPRYRj6Egkp', 'thread_MmHv5Dhw6ZNBTuw7mMEW2hQr']"
