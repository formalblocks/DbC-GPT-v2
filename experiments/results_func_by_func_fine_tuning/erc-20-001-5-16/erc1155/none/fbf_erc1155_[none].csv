run,time_taken,iterations,verified,annotated_contract,function_status,status,threads
1,328.3578383922577,24,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition true
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < batchBalances.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == _operator || __verifier_old_bool(_operatorApprovals[msg.sender][_operator]) != _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != _from || _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to])
    /// @notice postcondition _to != _from || _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from])
    /// @notice postcondition forall (address x) _from != x || _balances[_id][x] == __verifier_old_uint(_balances[_id][x]) || x == _from
    /// @notice postcondition _from == _to || __verifier_old_uint(_balances[_id][_from]) >= _value
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Failed', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_Aw9G36AsMxmnnZnhiNZ2G92g', 'thread_Gnmu8xCf4ZZvemmz3L9zHtG3', 'thread_v6l61CkO4yHtaKNupauXWfFb', 'thread_DYYdj7BtvqQ4KuFp3ZaKgXG9', 'thread_FIg40ZekhQracuoWtY6pGUNU', 'thread_62YU8DDTBnmrL7HWOViBDbS9']"
2,357.20242190361023,24,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition true
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint j) !(0 <= j && j < _ids.length) || _balances[_ids[j]][_from] == __verifier_old_uint(_balances[_ids[j]][_from]) - _values[j]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Failed', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Failed', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_wlELfdWE6cvVu3mI3LXMPrql', 'thread_LR7NyRvuCL8RQIwTchTfXC6r', 'thread_EsRxYg7ZmHe0GfYALb2b1WQ5', 'thread_z73pYnHXAVm3tTJEqQ61PvZy', 'thread_Ax6wTsq5YZrWyRo39Phl5kNW', 'thread_3cZ8goeKzlxaV7cM0O7qamAf']"
3,216.02468180656433,15,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == _operator || __verifier_old_bool(_operatorApprovals[msg.sender][_operator]) != _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint j) !(0 <= j && j < _ids.length) || _from != _to || _balances[_ids[j]][_from] == __verifier_old_uint(_balances[_ids[j]][_from])
    /// @notice postcondition forall (uint k) !(0 <= k && k < _ids.length) || _from == _to || _balances[_ids[k]][_from] == __verifier_old_uint(_balances[_ids[k]][_from]) - _values[k]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Failed', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_Q0QOQdgW0OdUHQcOWBqFrmm8', 'thread_ku55j5ro64fo15qXqsidAyXd', 'thread_zY1KmuOIOcAYZd0AWGMKkQoP', 'thread_GdTuqhnzazrgAQyUbLmqe7zD', 'thread_yNTjAjxLi7Bg24XQBeUInXCm', 'thread_LMsae5XotVAN5stTFWwn4BL6']"
4,327.5905375480652,15,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == _operator || __verifier_old_bool(_operatorApprovals[msg.sender][_operator]) != _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint j) !(0 <= j && j < _ids.length) || _balances[_ids[j]][_from] == __verifier_old_uint(_balances[_ids[j]][_from]) - _values[j]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Failed', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_612KxgIvLdy1WV40VIqcKeHH', 'thread_wLQAEdl2YsGwZhAdNdZyjoeZ', 'thread_1GJURDvm7ITbU8k6hSzluJdZ', 'thread_xQb59wbKCyBv5gPjkqHhTezT', 'thread_9AIfoOPahZZ09dLc7yMVeqjY', 'thread_CW94IHO3WTaN6hLn2eDRQQXz']"
5,281.8193063735962,15,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < batchBalances.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == _operator || __verifier_old_bool(_operatorApprovals[msg.sender][_operator]) != _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint j) !(0 <= j && j < _ids.length) || _balances[_ids[j]][_from] == __verifier_old_uint(_balances[_ids[j]][_from]) - _values[j]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Failed', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_70B4WVkGO095X0HUfAhFqjRw', 'thread_dAgNL2dJiSeSD3pGOS5q0RmV', 'thread_8rYnjrAUm1YJhR5nVjVRMeFb', 'thread_jccJqMQB6zT69ZBfts0UwomN', 'thread_t19W6kX7UIBWcO68poKfQ0wd', 'thread_gvEiIlUxw9UUbxIwLgTGtArd']"
6,104.56605577468872,6,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == _operator || __verifier_old_bool(_operatorApprovals[msg.sender][_operator]) != _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != _from || __verifier_old_uint(_balances[_id][_from]) == _balances[_id][_from]
    /// @notice postcondition _to == _from || __verifier_old_uint(_balances[_id][_from]) == _balances[_id][_from] + _value
    /// @notice postcondition _to != _from || __verifier_old_uint(_balances[_id][_to]) == _balances[_id][_to]
    /// @notice postcondition _to == _from || __verifier_old_uint(_balances[_id][_to]) + _value == _balances[_id][_to]
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint j) !(0 <= j && j < _ids.length) || _from != _to || _balances[_ids[j]][_from] == __verifier_old_uint(_balances[_ids[j]][_from])
    /// @notice postcondition forall (uint k) !(0 <= k && k < _ids.length) || _from == _to || _balances[_ids[k]][_from] == __verifier_old_uint(_balances[_ids[k]][_from]) - _values[k]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_qH6wXvXoGB0v7rkVUHhm371X', 'thread_xltxks1BphZy77BxoqYtqgl2', 'thread_JUDZ6j5j70j6EiI5SDg6nKz3', 'thread_wmDdDXWHnPJq7omIKznOMpo0', 'thread_snSURx13JHOtHEDnfx8g63mI', 'thread_NWt1cS1Labxd50XDEiO7UVtf']"
7,100.4440975189209,6,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < batchBalances.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == _operator || __verifier_old_bool(_operatorApprovals[msg.sender][_operator]) != _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != _from || __verifier_old_uint(_balances[_id][_from]) == _balances[_id][_from]
    /// @notice postcondition _to == _from || __verifier_old_uint(_balances[_id][_from]) - _value == _balances[_id][_from]
    /// @notice postcondition _to != _from || __verifier_old_uint(_balances[_id][_to]) == _balances[_id][_to]
    /// @notice postcondition _to == _from || __verifier_old_uint(_balances[_id][_to]) + _value == _balances[_id][_to]
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint j) !(0 <= j && j < _ids.length) || _balances[_ids[j]][_from] == __verifier_old_uint(_balances[_ids[j]][_from]) - _values[j]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_fUXbDkSJb2enboOeh3cDUnhe', 'thread_jcbmdQrlEYhhzEhnRBAr8WIa', 'thread_jkMFlpUAEOWIcu7Fwu3LzZWr', 'thread_A0sbcIjBmIKZ33YQmQZxiShU', 'thread_obvRUU6hBUmVJDYlb6wyue1r', 'thread_KbRZXR44jYZI6CL8aiEQkiIq']"
8,342.6902058124542,15,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint j) !(0 <= j && j < _ids.length) || _balances[_ids[j]][_from] == __verifier_old_uint(_balances[_ids[j]][_from]) - _values[j]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Failed', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_j15fp2wTW9ShNsTxv4tiQQtS', 'thread_zzaMUoP1yIbi2pKZSBJRqj9N', 'thread_APjJUwoupIT7DP7KNSFpdtzp', 'thread_Q5cpVjUBzof4liCmgBwkazml', 'thread_TFfBqaDfAWEfFYLdPuDX9hYO', 'thread_AuhaW9nwKzMZfAwwPXFDh3xG']"
9,372.46279406547546,24,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition true
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < batchBalances.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == _operator || __verifier_old_bool(_operatorApprovals[msg.sender][_operator]) != _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint j) !(0 <= j && j < _ids.length) || _balances[_ids[j]][_from] == __verifier_old_uint(_balances[_ids[j]][_from]) - _values[j]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Failed', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Failed', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_4C4hYFWyKpigTcruuh0k08G2', 'thread_PI5uzEd84B9GSOrDsFdHAOqp', 'thread_psaV8409mPEzH4BHpP5xVosQ', 'thread_VBEPVjRQhzFdpVK6gJk8Rhxp', 'thread_OhV5B41MfZIiBdhO1aU0clDf', 'thread_rPEpN3VcPCV21Afl3JhMJ2wI']"
10,280.0159237384796,15,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < batchBalances.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == _operator || __verifier_old_bool(_operatorApprovals[msg.sender][_operator]) != _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint j) !(0 <= j && j < _ids.length) || _balances[_ids[j]][_from] == __verifier_old_uint(_balances[_ids[j]][_from]) - _values[j]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Failed', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_luhFrkW2DGIvtG4Ck7gtYOpW', 'thread_tlCiKEoB6Kn47BdtCyqQeAZV', 'thread_ZMQoS9TnrXqc0u8aT9zSCvJY', 'thread_z4jNb30e5PxF2o7k5bHyU7BY', 'thread_Q8SYeSzzbrULqY36eFYbInWu', 'thread_RrhQl8xjaeyBCOAL4A5y0543']"
