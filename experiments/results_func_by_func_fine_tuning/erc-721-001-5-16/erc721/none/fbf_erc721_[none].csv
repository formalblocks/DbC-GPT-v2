run,time_taken,iterations,verified,annotated_contract,function_status,status,threads
1,467.2550039291382,35,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _owner == _tokenOwner[_tokenId] || (_tokenId != 0)
    /// @notice postcondition _tokenId != 0 || _owner != address(0)
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition _tokenApprovals[_tokenId] == __verifier_old_address(_tokenApprovals[_tokenId]) || _approved != __verifier_old_address(_tokenApprovals[_tokenId])
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition _tokenApprovals[_tokenId] == approved
    /// @notice postcondition forall (address addr) !(addr == approved && _tokenOwner[_tokenId] == __verifier_old_address(addr)) || _tokenApprovals[_tokenId] == addr
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == _operator && _approved == _approved
    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from || _from == _to || _from != _to
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Failed'}",[],"['thread_Vv4RxACnXUVySkjoYUTVG6qx', 'thread_RAHYPgPOqL4fN2pUxa2UBTZJ', 'thread_6QqZPoH6zdFcbskut7FmhWd2', 'thread_6taaOXZyYQYoZUCa69URxLZe', 'thread_gEcPrGnGUP3TjFuuVKtsoo54', 'thread_WQAFv03g1ApAQABw5wKDeHs3', 'thread_qnB9PDThIEUYHkWTLcgloV6E', 'thread_aXU7Jzuw23GxKqMGA1sayUfX', 'thread_BpaWN8289KQndMfnxV3BcTdj']"
2,288.2116103172302,20,True,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _owner == _tokenOwner[_tokenId]
    /// @notice postcondition _tokenId != 0 || _owner != address(0)
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition _tokenApprovals[_tokenId] == __verifier_old_address(_tokenApprovals[_tokenId]) || _approved != __verifier_old_address(_tokenApprovals[_tokenId])
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition _tokenApprovals[_tokenId] == approved || __verifier_old_address(_tokenApprovals[_tokenId]) == approved
    /// @notice postcondition !(0 <= _tokenId && _tokenId < 2**256 - 1) || _tokenOwner[_tokenId] != address(0)
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operatorApprovals[msg.sender][_operator] == _approved
    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved || __verifier_old_bool(_operatorApprovals[msg.sender][_operator]) == true
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Verified'}",[],"['thread_nDckVDcMoe4BYnYQmOtOqBm4', 'thread_1fyKB89VMPR6TeRtq0vePKUM', 'thread_B6ZnCXRj4vrvjlAkmXByqAgU', 'thread_dekloDZNEZWM5DpzTKwO60M1', 'thread_9dnZ1GmHJOWcpKyG1fgEwE8E', 'thread_TwqbplvdmAtTZzs5G9XhQf6k', 'thread_PXr10exKM1QPTH7QvXMRGDmx', 'thread_VS1utJgCHTiNWTDZ4VO24xND', 'thread_v16t3f3qGJSpYli4uWvYEyaN']"
3,410.32017517089844,29,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _owner == _tokenOwner[_tokenId]
    /// @notice postcondition _tokenId != 0 || _owner != address(0)
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition __verifier_old_address(_tokenApprovals[_tokenId]) != _approved || _tokenApprovals[_tokenId] == _approved
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition approved == _tokenApprovals[_tokenId]
    /// @notice postcondition !(0 <= _tokenId && _tokenId < _ownedTokensCount[__verifier_old_address(msg.sender)]) || approved == _tokenApprovals[_tokenId]
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition true
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Failed', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Verified'}",[],"['thread_KukUtou94iGETIkSSTBjaz5i', 'thread_oJyhkxlaVttSiNHxFM9rzwV8', 'thread_qzS9OlklBkL0utM3X6tyjAwh', 'thread_HETU11xWEvG28f24kisxe688', 'thread_StcCKkrH6HNafiDziPId9fJb', 'thread_LX96LesAFIuNHuH7gl7WSVpS', 'thread_9kZamhcyNDwmw4JHCp3BcdK4', 'thread_0SjSIq1OJVzufR9VYacSvr1a', 'thread_ECzDpiZUnzHOatJdwobJdyWS']"
4,363.77562403678894,25,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    /// @notice postcondition _owner != address(0) || balance == 0
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition !(0 < _tokenId) || _owner != address(0)
    /// @notice postcondition _owner == __verifier_old_address(_owner) || _owner == _tokenOwner[_tokenId]
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition __verifier_old_address(_tokenApprovals[_tokenId]) != _approved || _tokenApprovals[_tokenId] == _approved
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition _tokenApprovals[_tokenId] == approved
    /// @notice postcondition forall (address x) (_tokenOwner[_tokenId] != x) || (_tokenApprovals[_tokenId] == approved)
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == _operator || _operatorApprovals[__verifier_old_address(msg.sender)][_operator] == _approved
    /// @notice postcondition forall (address op) _operatorApprovals[msg.sender][op] == _approved || op != _operator
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from || _from == _to || _from == _from
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition _tokenOwner[_tokenId] == _to || _from == _from
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from || _from == _from
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Failed'}",[],"['thread_Xv9yBJgVvgvLbBvp8ppu8iAZ', 'thread_zAqGDTVoZanczn07TQtgAVYw', 'thread_4kZlPgDqQsydS4CNWQEr5gCY', 'thread_gh3EafYMhOKDUvrESTTpPbGB', 'thread_OZug4u8k7tJyl97yaGxLt5a7', 'thread_vLqsqkni2XBBXlKHndXo7vel', 'thread_rXpf0KaMmwqBx6tsG2ZRx4o0', 'thread_oCPOlvstK3n7eHhTVkUe2bdN', 'thread_MRQceesKR9AQlSvLm58KV9rG']"
5,737.8899571895599,48,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition true
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition _tokenApprovals[_tokenId] != __verifier_old_address(_tokenApprovals[_tokenId]) || _approved == __verifier_old_address(_tokenApprovals[_tokenId])
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition approved == _tokenApprovals[_tokenId] || !(0 <= _tokenId && _tokenId < 2**256-1)
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == _operator
    /// @notice postcondition _approved == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Failed', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Failed', 'safeTransferFrom': 'Failed'}",[],"['thread_ue55pXErdh8fRGgCHRi8teST', 'thread_jb1I1iUWG2u9kveqp4GAt2gE', 'thread_7aC7sqWcj6xaMkZNxG5UyQDf', 'thread_fRQ0Yg3DMYsDhrFYmcZ3OfQV', 'thread_mhqlEf0zB547f3pUl1cOMFdE', 'thread_XwAIzOvywpvSeolftMUY6bn2', 'thread_fis4bzFs598byuDy2L9fCYuO', 'thread_mlZ20n09J779TuwxzQrgDHSO', 'thread_bndI1oGgld1A8Ga0dSyIR62h']"
6,636.9966986179352,46,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition true
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition __verifier_old_address(_tokenApprovals[_tokenId]) != _approved || _tokenApprovals[_tokenId] == _approved
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition approved == _tokenApprovals[_tokenId] || (_tokenOwner[_tokenId] == address(0) && approved == address(0))
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == _operator && _approved == _approved
    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Failed', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Failed', 'safeTransferFrom': 'Failed'}",[],"['thread_hpFpUo6rZYn1m8xZ6g9bomPD', 'thread_ea2QXJfyqhtlSGEisp6sP8UI', 'thread_7cfbl83OLhsSvkfKSFDPb0IW', 'thread_phzh1bYUTcT5brCnTz3EQ2m3', 'thread_cg9QnxFMWBeQwjS5aVnqs1gs', 'thread_LPgGq9zSHSZZSfRQtI9CDqFu', 'thread_kybOaBV3VGga3pyDR6jlROcl', 'thread_nKNtnk9kRTBDOqlT5sG3B1YN', 'thread_trFQs0NUh4c3HSbj53Cu0Occ']"
7,280.5591585636139,20,True,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _owner == _tokenOwner[_tokenId]
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition _tokenApprovals[_tokenId] != __verifier_old_address(_tokenApprovals[_tokenId]) || _approved == __verifier_old_address(_tokenApprovals[_tokenId])
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition _tokenApprovals[_tokenId] == approved || __verifier_old_address(_tokenApprovals[_tokenId]) == approved
    /// @notice postcondition _tokenOwner[_tokenId] != address(0)
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == _operator
    /// @notice postcondition _approved == _approved || __verifier_old_bool(_approved) == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Verified'}",[],"['thread_aZxdfBA8eZVzae446m0bCarf', 'thread_nROJBjEhxqlPar7T6ChDEwJW', 'thread_ALlbFoodQ8Vk04CFCKKcBP9g', 'thread_SGc3g6YcZYqmjTaUvLovTbC8', 'thread_spjbMIkftx3g2os7wGL05wvJ', 'thread_TRbL5ain4DwBbFcmllQPXa5O', 'thread_lZC17cy4NJeTvvY4lYLwU7Cz', 'thread_VHCfKeIawMJDYKR6AqJYYwnu', 'thread_RicfWWoqCE3dz9RYBC04Rdh4']"
8,687.0875203609467,50,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition true
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition __verifier_old_address(_tokenApprovals[_tokenId]) != _approved || _tokenApprovals[_tokenId] == _approved
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition approved == _tokenApprovals[_tokenId]
    /// @notice postcondition _tokenOwner[_tokenId] != address(0)
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition true
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition _from == _to || __verifier_old_address(_tokenOwner[_tokenId]) == _from || _from != _to
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Failed', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Failed', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Failed'}",[],"['thread_GIacct79GovdKjWdhNU1jlG9', 'thread_4C5pk3vzX8dmzWc7vuHVLb2c', 'thread_oSMe02DzrV5zjAVHuSZQxO9h', 'thread_Po88PYnjyEPp5pim2i044i0U', 'thread_mOcyLA6GmJiNgq6wpcPycTsj', 'thread_aoIMXcMNqNzCjIHEUKEoz24M', 'thread_cvWuTwlMzFYZy55NOGZjVwb9', 'thread_1v2a1JaTusrrmhJ2Vy87V2XK', 'thread_tDklVD7bxstdajypirrrjB44']"
9,484.9387888908386,29,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _owner == _tokenOwner[_tokenId]
    /// @notice postcondition _tokenId != 0 || _owner != address(0)
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition _approved == __verifier_old_address(_tokenApprovals[_tokenId]) || _approved != __verifier_old_address(_tokenApprovals[_tokenId])
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition _tokenApprovals[_tokenId] == approved || __verifier_old_address(_tokenApprovals[_tokenId]) == approved
    /// @notice postcondition !(0 <= _tokenId && _tokenId < 2**256 - 1) || _tokenOwner[_tokenId] != address(0)
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition true
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][ _operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Failed', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Verified'}",[],"['thread_gGhmR4Mzb4ZPiv4SEXhfEpcQ', 'thread_K9dVMAgQEq5tRBvlztLnuQFl', 'thread_i1lsTnWqcO9iKJ7E66zZiurW', 'thread_zKaLu9OzDR8k4DnDrkKQFtMF', 'thread_nXUom6r8f77hGdzga5obbbB2', 'thread_Gofl5Cj4uNFL1YOmUlckJNRq', 'thread_oF3pJKNKePnkctIgmloVnCVn', 'thread_8oHr8lITowk0vs0lMNfkB8TM', 'thread_aeHcoY0xMJzsQT7gBpvMVLuD']"
10,286.9652829170227,22,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _owner == _tokenOwner[_tokenId]
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition __verifier_old_address(_tokenApprovals[_tokenId]) != _approved || _tokenApprovals[_tokenId] == _approved
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition true
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == _operator || _operatorApprovals[__verifier_old_address(msg.sender)][_operator] == _approved
    /// @notice postcondition forall (address addr) !(msg.sender == addr) || _operatorApprovals[addr][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition _tokenOwner[_tokenId] == _to || _from == _from
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from || _from == _from
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Failed', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Verified'}",[],"['thread_jL54hUDqzBbD23SjRIZZgf0n', 'thread_8suFqNWYcABLs5hRrlzfx0HG', 'thread_LMhYEKth1bl7nI3Tmdczt0LN', 'thread_Tn3A2MwBo1hK0McKmPoN5Dl6', 'thread_JkvM92VpQ861iMeXrdJ2PS7l', 'thread_JrbzV5IKjb6geotSSiH15Ngl', 'thread_sngCt1k38HvCxsG4IqcggleX', 'thread_40Bievmugllf2aOaJ4EaGlEJ', 'thread_RoRqmaBczXFO9T830CTo2qjJ']"
