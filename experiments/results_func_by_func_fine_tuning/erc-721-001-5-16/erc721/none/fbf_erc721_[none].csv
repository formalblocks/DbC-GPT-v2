run,time_taken,iterations,verified,annotated_contract,function_status,status,threads
1,699.9890954494476,56,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _owner == _tokenOwner[_tokenId]
    /// @notice postcondition _tokenId == 0 || _owner != address(0)
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition true
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition true
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operatorApprovals[msg.sender][_operator] == _approved
    /// @notice postcondition _approved == __verifier_old_bool(_approved) || _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Failed', 'getApproved': 'Failed', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Failed', 'safeTransferFrom': 'Failed'}",[],"['thread_022FTGsfMLD3TjGw59sROWne', 'thread_sgHORgbDNhbDVrqqyKmIrxWF', 'thread_jGdvkIVM2H2m90BA1h3DW0dQ', 'thread_2fuEQWsKDYxsgONhJbMYStQt', 'thread_yDTePrfOOA8T0oo6P7amHgI8', 'thread_W4ZLFJXJcWBWfaBH9eIfoMm6', 'thread_OOlZ71BAXmSsMZ4vLOCfVjbJ', 'thread_jKEWObCpqLdTyt289g6z8bd5', 'thread_1Y0T9461iXCjpd5ujWh8Z4Me']"
2,536.1443903446198,47,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition true
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition forall (address operator) (_operatorApprovals[__verifier_old_address(msg.sender)][operator] == _operatorApprovals[msg.sender][operator])
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition !(0 <= _tokenId && _tokenId < 2**256 - 1) || approved == _tokenApprovals[_tokenId]
    /// @notice postcondition approved == _tokenApprovals[_tokenId]
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == (_operatorApprovals[_owner][_operator] == true)
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Failed', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Failed', 'safeTransferFrom': 'Failed'}",[],"['thread_nYuw5wjVksANg2Q8Ezpy7PKV', 'thread_uTu5ptLn70ARZPQ0LFrbFOrf', 'thread_UrO7ab4gHwEEbqBLDFd9Mace', 'thread_0nAChNuVz1oRzti8HPXNtGmJ', 'thread_e3A84570OnxdOZMv0Lyj88pQ', 'thread_QPhLzNFbkPKxTzDuGiFLdtba', 'thread_JYNYkDnqwIdRvjjfAJqw0H5s', 'thread_Z8OdCdvGgC8OHbBeU3FMYWte', 'thread_SKAcHDEtyb31gd97kJXgqD5S']"
3,484.2362856864929,36,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _tokenOwner[_tokenId] == _owner
    /// @notice postcondition _owner != address(0) || _tokenId != _tokenId
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition forall (address addr) !(addr == _approved) || _tokenApprovals[_tokenId] == addr
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition _tokenOwner[_tokenId] == __verifier_old_address(_tokenOwner[_tokenId])
    /// @notice postcondition _tokenApprovals[_tokenId] == __verifier_old_address(_tokenApprovals[_tokenId])
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Failed', 'safeTransferFrom': 'Failed'}",[],"['thread_1gtE8LVBk7lZkp58TKoDTClP', 'thread_LzcYPO9YTCO3UmXbVnxQvnMK', 'thread_qRCAnP42y2v1if3L0Uqk9G4A', 'thread_FfAZPdtedGly323IkHroKd4f', 'thread_XLnWuFwNrYKbJXunyGFKmmwY', 'thread_UZDP8b2HBwhbzpytsvMRppd8', 'thread_Tq0ftzNpnhRqMUhnGwJ7WAf5', 'thread_YrAEvu3iH1AuzlVRUHsduRCM', 'thread_EzAbD9A5rVRUjWvKZOZMdpjC']"
4,460.76421451568604,40,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _tokenId == 0 || _owner == _tokenOwner[_tokenId]
    /// @notice postcondition _owner == address(0) || _tokenOwner[_tokenId] == _owner
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition forall (address operator) !(operator == msg.sender && __verifier_old_bool(_operatorApprovals[__verifier_old_address(msg.sender)][operator])) || _operatorApprovals[msg.sender][operator]
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition true
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == (_operatorApprovals[_owner][_operator] == true)
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_uint(_ownedTokensCount[_from]) == _ownedTokensCount[_from] || _ownedTokensCount[_from] == __verifier_old_uint(_ownedTokensCount[_from]) - 1
    /// @notice postcondition __verifier_old_uint(_ownedTokensCount[_to]) == _ownedTokensCount[_to] || _ownedTokensCount[_to] == __verifier_old_uint(_ownedTokensCount[_to]) + 1
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Failed', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Failed'}",[],"['thread_HjhZuRV58olpSznGN8cRwMCb', 'thread_bnhYJidRg2hRhN4TlVMk13tT', 'thread_V1TeT96bRSvTYDqFpYz09Dco', 'thread_fiKo6eKgF0BHUAhXyVHFiEWB', 'thread_5SXgdmKsKnQuNmFOuHzf6v0m', 'thread_WKLoGsmfDzRFPO59FJeTz0Zq', 'thread_RLa68Vs0eB9K5wjSSIfX2feO', 'thread_Zs655MNvFFZGjTylqWABSsAF', 'thread_QEaFXFvv6uIdQA7SYsmPlfRr']"
5,569.4764912128448,45,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _tokenOwner[_tokenId] == _owner
    /// @notice postcondition _owner != address(0)
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition __verifier_old_address(_tokenApprovals[_tokenId]) != _approved || _approved == address(0) || _tokenId == __verifier_old_uint(_tokenId)
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition !(0 <= _tokenId && _tokenId < 2**256 - 1) || approved == _tokenApprovals[_tokenId]
    /// @notice postcondition !(0 <= _tokenId && _tokenId < 2**256 - 1) || approved == __verifier_old_address(_tokenApprovals[_tokenId])
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Failed', 'safeTransferFrom': 'Failed'}",[],"['thread_FLIW9O8hYqVdE6L8jyWaHpD6', 'thread_AflOM84WeJ5TEAg9J4FdvUXG', 'thread_1yMdjZI2GosOdhIbKbCYP3fj', 'thread_tqxosheS2A9KlRn5g61zG4ii', 'thread_m3dizaxqaVJ2gzlARvaOo7Ex', 'thread_vxVubygIRUwFTeEnhiirbOrp', 'thread_LqGuEhB9zjbNwEYXwshRkkPE', 'thread_Bf56nyuOCXrlaVB0lupvTEde', 'thread_zGYBSnrSUpamQmspZRDOkDbU']"
6,446.2308180332184,37,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _tokenOwner[_tokenId] == _owner
    /// @notice postcondition _owner != address(0)
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition forall (address addr) !(addr == _approved) || _tokenApprovals[_tokenId] == addr
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition true
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == __verifier_old_bool(_operatorApprovals[_owner][_operator])
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Failed', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Failed'}",[],"['thread_w5VavAnSatV2Bdg3vGUVdz4a', 'thread_5eFzPSOM8oBbrj7cnnd6o9pm', 'thread_dyNwWOOuhYx0jlkgvJnJBMtQ', 'thread_XJT5sXDrbWFzTCwIEb33btYb', 'thread_E0jrBkRyRtbc9dZYm2BwMI5B', 'thread_sdA5eXNzMmFda7gTRCmf06IL', 'thread_Z7gDDuBZYo6ronwh3k11gX1U', 'thread_Vx5Xyc6kw7DpPOExN5vMwEgo', 'thread_345oK3YXwq8M1vNybN9BRcny']"
7,554.4536888599396,46,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _tokenId == 0 || _owner == _tokenOwner[_tokenId]
    /// @notice postcondition _owner != address(0) || _tokenId == 0
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition forall (address addr) !(addr == _approved && __verifier_old_address(_tokenApprovals[_tokenId]) == addr) || _tokenApprovals[_tokenId] == addr
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition true
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _approved != __verifier_old_bool(_approved)
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Failed', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Failed', 'safeTransferFrom': 'Failed'}",[],"['thread_Cq1QOi85WYog0eDOeXRBGhdM', 'thread_aRxjSiJH1KseI47PjzkcskLi', 'thread_0EwoX5GbPA1kRT79jbjtdqIA', 'thread_dMGzSJkAlgSf4zEL3WwsYxNU', 'thread_p9dDLmusIyOmHOvjBhTjz6cP', 'thread_HHSovvXShdhArG4GvVxx6zRc', 'thread_3b6b0zS31LuycWEzzDe8C3NV', 'thread_bk8I3xYpafiPUgTnlC7KGA9S', 'thread_UwjYoVEHZsOvd6C4Yeh1ybmH']"
8,492.0835404396057,39,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _tokenOwner[_tokenId] == _owner
    /// @notice postcondition !(0 < _tokenId) || _owner != address(0)
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition forall (address addr) !(addr == _approved) || _tokenApprovals[_tokenId] == addr
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition !(0 <= _tokenId && _tokenId < 2**256 - 1) || approved == _tokenApprovals[_tokenId]
    /// @notice postcondition !(0 <= _tokenId && _tokenId < 2**256 - 1) || approved == _tokenApprovals[_tokenId]
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition true
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == __verifier_old_bool(_operatorApprovals[_owner][_operator])
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Failed', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Failed'}",[],"['thread_KpPnBasNAyxdvRchdPuaVnAc', 'thread_6DlvaDdOyt6E3kHW4npzwydn', 'thread_QKaRYiilnJibDTdOyx1APIB8', 'thread_WH2XVzPdFEZVQhE7DJyegqjX', 'thread_fjLf3AkEhsRLm9ooSEz6UPqB', 'thread_euxq4TOjEY55KWkh5bg7g3Ex', 'thread_m4TTH7CotE9CqHfJu7150S22', 'thread_bKmyrLE8bqWqjxnHdBNATkoi', 'thread_GCoWq9jQIcJ0B7c0cPfy1M93']"
9,408.2775173187256,33,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _tokenId != 0 || _owner == __verifier_old_address(_tokenOwner[_tokenId])
    /// @notice postcondition _tokenId == 0 || _owner != address(0)
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition forall (address operator) (_operatorApprovals[__verifier_old_address(msg.sender)][operator] == _operatorApprovals[msg.sender][operator])
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition !(0 <= _tokenId && _tokenId < 2**256 - 1) || approved == _tokenApprovals[_tokenId]
    /// @notice postcondition !(0 <= _tokenId && _tokenId < 2**256 - 1) || approved == __verifier_old_address(_tokenApprovals[_tokenId])
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from || _from == address(0) || _tokenId == __verifier_old_uint(_tokenId)
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Failed'}",[],"['thread_FQH44UANB1n8zDRFh1EjdUnZ', 'thread_IY2AleDDpj5rgVCMPlExHiWZ', 'thread_ilcBRNJpOxsHQ5Fe73yvrTpn', 'thread_Xl6th3m5Lyj5jWFyVdTAVETT', 'thread_4Rw9ryfa5cITofSsFr5X4MZw', 'thread_sUWmXBdk5mPkXIpNhCV0JYKI', 'thread_2F2tjmBUKn573LNXBMI3Ibs1', 'thread_yXW7vYWzpRfEGtaDCpWCpU94', 'thread_tcw5YAMuVSEK7aYugKWi6oNU']"
10,1012.748893737793,29,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _tokenOwner[_tokenId] == _owner
    /// @notice postcondition _owner != address(0) || _tokenId == 0
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition forall (address operator) !(operator == _approved && operator == __verifier_old_address(_tokenApprovals[_tokenId])) || _tokenApprovals[_tokenId] == operator
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition _tokenOwner[_tokenId] == __verifier_old_address(_tokenOwner[_tokenId])
    /// @notice postcondition _tokenApprovals[_tokenId] == __verifier_old_address(_tokenApprovals[_tokenId])
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Failed'}",[],"['thread_8PZyJSGS5kLQ2zkdBb2zj29d', 'thread_V8K6wJ2TAYr46E45sb3W1dXs', 'thread_lcGdDYvmPn2eQiKw7b5zOJEz', 'thread_tMdckZrdTitGY1jZZMXBe5sx', 'thread_f15Nu5BkhlUuYB5pUII6gRiX', 'thread_FwQ9hpmvnS5ed8GAzIpc0Lsf', 'thread_HBzyTQ2uIdS0uSvoV4AA0q6u', 'thread_Y8JbsaZTJEBXxyIxBezGclUy', 'thread_ijyrENKWI0Wx3hNLmMBdWork']"
