run,time_taken,iterations,verified,annotated_contract,function_status,status,threads
1,425.08676958084106,33,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition true
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Failed', 'approve': 'Failed', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_6g8n2XVTvnu4M3OF6ncJjRoc', 'thread_Wmma3JoaFusdjeiV7xJIzVPo', 'thread_Lz5Uum3y60H85g0kMbaJqmpg', 'thread_ZgMlGOyJqIZWV6ReIKwf8tCR', 'thread_edOc9tM8KfcubtuFWR0VpCQu', 'thread_1p6xct8xGtd6DqgLyXJ5AZVz']"
2,415.86001992225647,33,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition true
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Failed', 'approve': 'Failed', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_mgaTEHWcgRul90TrdZRhmX6X', 'thread_sX40QFLNu71y819BY5GWsCDz', 'thread_SnqFqM1BszWubrMlzMHzs1fs', 'thread_R6LGkKbpdGNpgyi4JzvWDwbD', 'thread_Gd4hKjA3Y6GcONHycMinsNfH', 'thread_X2Ipg1goK05gs63wPaWuSsdX']"
3,398.43713212013245,33,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition true
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Failed', 'approve': 'Failed', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_7FxlI2kuE80KO4bQSe2IuZS4', 'thread_7Y1cjSySnyJmWTZZhmqorzjC', 'thread_uXUNiiy5CJgViY6fihDgksig', 'thread_4dC7ejc9YTUHyeD2T8W8dmsx', 'thread_LFN0NE1QPXaeD02WKmhVFyoA', 'thread_NoaxohXFPnkO1KJgoqdz14PF']"
4,237.02440524101257,19,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition true
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) || _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition success == true || __verifier_old_uint(_allowed[msg.sender][_spender]) == _allowed[msg.sender][_spender]
    /// @notice postcondition __verifier_old_uint(_allowed[msg.sender][_spender]) == 0 || (success == true && _allowed[msg.sender][_spender] == _value) || (success == false && _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]))
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_Se91NqC4v1mi7PpuZ7qMYSPf', 'thread_wF3bmnUiMUrxEg256xVDOxou', 'thread_ca9JMa4zvBwv7s4VHDH4vin7', 'thread_8w6hzeomFV1wG759ZpmYQptI', 'thread_Bo7sLQVWsDUA74fE4RPZzpWu', 'thread_cV5QYi2gJOZZxa4dbdcatKUb']"
5,279.91748809814453,24,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition success == (_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && _to != msg.sender) || (_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0) || (_to == msg.sender && _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]))
    /// @notice postcondition _to != msg.sender || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender])
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Verified', 'transferFrom': 'Failed', 'approve': 'Failed', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_dDmi7vWg9tbXaypl8CQGNJTt', 'thread_QbnwmSyLBMKcmkFFz362A6dl', 'thread_jXoQpI2PTPjpk4X632bVf7zd', 'thread_zJlTkWiTthicpaFdGPJ9pqrC', 'thread_q1kZtFB5nOZKBdXWoPNOJY6F', 'thread_Q6MPeY2aZ6lPYSlxi8NTx8Gs']"
6,312.2875316143036,24,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition true
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition success == true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Failed', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_y6X6l03UQCaqxRfh6580AgHq', 'thread_vp1l1IM9FKGxOI9DtjdM6sdM', 'thread_EhUhUy4sCsJ6UDbIr2stV4HO', 'thread_CvJV3YYdIagFSleD3NEMpnIn', 'thread_ukXoPYz7yJZjmMaArzQSFXMe', 'thread_GzLu9YQi5SlxTuBBMes82BVg']"
7,313.7632477283478,25,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition true
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition success == true || __verifier_old_uint(_allowed[msg.sender][_spender]) == _allowed[msg.sender][_spender]
    /// @notice postcondition __verifier_old_uint(_allowed[msg.sender][_spender]) == 0 || _allowed[msg.sender][_spender] == _value
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Failed', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_pkVTXOqx0EsNaopQ4GTcn7n6', 'thread_FyyuNE80AE6IE7eeiXxnoaeC', 'thread_mpK2sOwyRgCIX7mSPjxpIl7v', 'thread_XrNut3v5hu3ZRDkQ1YFiXgrq', 'thread_3E5tVHIgo9F967eCShumMNBB', 'thread_k5QGTCiPtp9gxETcwRmYOIl9']"
8,296.0748100280762,24,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition true
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition success == true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Failed', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_vsG2DinV23lBidHE5Oa05Iw4', 'thread_DkAN0GbcYM2BtW2kaHoxOBuM', 'thread_uBdhY2xc4EG2xn1wRd77ItRa', 'thread_g9FClDZXjmmbLMVl7nPvSowt', 'thread_qAnlssbk8rRoT1KPDZLSVsyF', 'thread_uMBS4cbEOuueSOzlyJVWRK1l']"
9,292.7707941532135,25,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition true
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition success == true || __verifier_old_uint(_allowed[msg.sender][_spender]) == _allowed[msg.sender][_spender]
    /// @notice postcondition success == true && _allowed[msg.sender][_spender] == _value || success == __verifier_old_bool(success) && _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender])
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Failed', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_S2os3GfLZHuYukmQERt51i1N', 'thread_ZDL5fbkkLLuLxkSlGubR6EqY', 'thread_EMnDabbJG9pAdRSA4AHXowT5', 'thread_sB4WJDDmg5Zbzy3dsURV3f9a', 'thread_SICRM7hqDtHj5lGVcmFrVRyd', 'thread_RRcRQLjEuE8uORrryjhM30Ev']"
10,229.014173746109,24,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition true
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition success == true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Failed', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_KN38YCMGCAEsPslYFlzbZ81s', 'thread_dBRnzNAujgJHQs0HqyPxBWOo', 'thread_Tp7AHX0rcABQGcnQtN9JVFdI', 'thread_38aUJletH3MhgsnS3eF24vg0', 'thread_Au5gMGq7QTfWJL8xbYw77rX3', 'thread_uA3L7zKukmt0FdXVamwyLefT']"
