run,time_taken,iterations,verified,annotated_contract,function_status,status,threads
1,258.02307057380676,20,True,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _owner == _tokenOwner[_tokenId]
    /// @notice postcondition _tokenId != 0 || _owner != address(0)
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition _tokenApprovals[_tokenId] == __verifier_old_address(_tokenApprovals[_tokenId]) || _approved != __verifier_old_address(_tokenApprovals[_tokenId])
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition _tokenApprovals[_tokenId] == approved
    /// @notice postcondition _tokenOwner[_tokenId] != address(0)
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == _operator && _approved == _approved
    /// @notice postcondition _operatorApprovals[__verifier_old_address(msg.sender)][_operator] != _approved || _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Verified'}",[],"['thread_nqnb2JIVx8qD9XXwrqEfXQUa', 'thread_vrQOX5Qh70yv9Qkdkf7IcWXg', 'thread_xCCKrEDwDY2mMVh0zL7Gmiqv', 'thread_caYK3fZzLaThk5eSK9UF1Hgz', 'thread_us8CwoyS06Q2rYRhvkqGPimd', 'thread_Wv25uKpxTCFbEfOLddvYRuui', 'thread_DI247dFszjpvJVG2MrmL8BP1', 'thread_XMm0E0fwTdAu2os4eRmCdcgm', 'thread_BzHLx0b4sDNEJbjFb2JMv9TJ']"
2,227.06549382209778,19,True,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _owner == _tokenOwner[_tokenId]
    /// @notice postcondition _tokenId != 0 || _owner != address(0)
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition __verifier_old_address(_tokenApprovals[_tokenId]) == _approved || __verifier_old_address(_tokenApprovals[_tokenId]) != _approved
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition approved == _tokenApprovals[_tokenId]
    /// @notice postcondition !(0 <= _tokenId && _tokenId < _ownedTokensCount[__verifier_old_address(msg.sender)]) || approved == _tokenApprovals[_tokenId]
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == _operator && _approved == _approved
    /// @notice postcondition _operatorApprovals[__verifier_old_address(msg.sender)][_operator] != _approved || _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Verified'}",[],"['thread_AKAVOaOiAd2y7oBuQw8DwRRI', 'thread_kJO57B2ohb3RtW006Mh6gnGj', 'thread_w10z79YQMnN2dkXDm2dHc7Wl', 'thread_pQlyfb36D8sjKXQkxl3heOlY', 'thread_340etcRsbPDXxZ8KldI9pQqh', 'thread_jx1LnnZd1MEQtCoKvrg8oeC0', 'thread_A6NVzApxmdGRM8NhkB6J9GNp', 'thread_cZgxZ22emkG21R2KWFGGUBYp', 'thread_pSyid7ct1mVU301HWrehTax0']"
3,173.1377465724945,14,True,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    /// @notice postcondition _owner != address(0) || balance == 0
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _owner == _tokenOwner[_tokenId]
    /// @notice postcondition _tokenId != 0 || _owner != address(0)
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition _approved != __verifier_old_address(_tokenApprovals[_tokenId]) || _tokenApprovals[_tokenId] == _approved
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition _tokenApprovals[_tokenId] == approved
    /// @notice postcondition _tokenOwner[_tokenId] != address(0)
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == _operator
    /// @notice postcondition _approved == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition _tokenOwner[_tokenId] == _to || _from == _from
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from || _from == _from
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Verified'}",[],"['thread_7CpLsVuSjORdWUpIidagtWox', 'thread_Rb1Ib48WRjG2QjbzqvCSXD2G', 'thread_nPuYGjEAlIOzzfGfXusu6GiQ', 'thread_GXJl8gXs2eGv9nSly1CQJ0Hl', 'thread_wyQ7PqkcaOjmApE3xhZAKR2U', 'thread_uuTA3DD6xL6NzPkfWRHWyypS', 'thread_z8i7iHFe355VwM29mnal9MfB', 'thread_ddlE657udae7TgRLV82a81eA', 'thread_iq4v3OhiCA4vMaWwa9Z1pVTI']"
4,313.1682162284851,28,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _owner == _tokenOwner[_tokenId]
    /// @notice postcondition _tokenId != 0 || _owner != address(0)
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition __verifier_old_address(_tokenApprovals[_tokenId]) != _approved || _tokenApprovals[_tokenId] == _approved
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition _tokenApprovals[_tokenId] == approved
    /// @notice postcondition forall (address addr) !(addr == approved && _tokenOwner[_tokenId] == __verifier_old_address(addr)) || _tokenApprovals[_tokenId] == addr
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition true
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Failed', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Verified'}",[],"['thread_pu8R9Wz6hU9s2O34rQrpl8cg', 'thread_1w7ynP06Ry65sP7ZmdmATfJQ', 'thread_vJUJYaATANsmfNKggOzwjbGG', 'thread_HU8EZludWiUz1zrGhd1cOYja', 'thread_7yft5td44DA9WZcoFbxGCbYZ', 'thread_u5xIIm2v07DF4hgK9b1u3OMs', 'thread_nwQN55Ur4dK1L9War3hBfhas', 'thread_vJ93x6XvYnCC3zQfs3kti0jR', 'thread_scvyf3cmenJ26kD9sru2o34M']"
5,555.4185123443604,46,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition true
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition __verifier_old_address(_tokenApprovals[_tokenId]) != _approved || _tokenApprovals[_tokenId] == _approved
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition _tokenApprovals[_tokenId] == approved
    /// @notice postcondition forall (address addr) !(addr == approved && _tokenOwner[_tokenId] == __verifier_old_address(addr)) || _tokenApprovals[_tokenId] == addr
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == _operator
    /// @notice postcondition _approved == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Failed', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Failed', 'safeTransferFrom': 'Failed'}",[],"['thread_ORBDId6IPwAoLRPAszfDP4o7', 'thread_VDNXwPHi8CZtbDSYWcqSCjv5', 'thread_I3O0nX9D49yyawNH0XNPinsE', 'thread_OJRRtl8ISIO8hsQFQa8Biq4L', 'thread_QKN4I7CkfsBVDcJ9Khmd0HDJ', 'thread_rWkmIh8990T43cEQmXnlbShX', 'thread_yQeHAXr4NhttnOQpMqd1PfcP', 'thread_9Elwg4G6GQXCyeimsUdPa6jO', 'thread_291M2cauV9Rv5k0SPlXQr0mC']"
6,558.8945651054382,47,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition true
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition _tokenApprovals[_tokenId] != __verifier_old_address(_tokenApprovals[_tokenId]) || _approved == __verifier_old_address(_tokenApprovals[_tokenId])
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition approved == _tokenApprovals[_tokenId]
    /// @notice postcondition !(0 <= _tokenId && _tokenId < _ownedTokensCount[__verifier_old_address(msg.sender)]) || approved == _tokenApprovals[_tokenId]
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == _operator
    /// @notice postcondition _approved == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition true
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Failed', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Failed', 'safeTransferFrom': 'Failed'}",[],"['thread_qARdyeFsJj6CuHFkZZOtsm2Y', 'thread_zSvhHTGkvpsv7jPBz03s86Ox', 'thread_eFk2Mlwnhp3yNyO0v4vpRbIi', 'thread_qpPBqLdpoL8BSgGtpTwQZq1o', 'thread_pa0tyZ48kzvFY8MIzrfFfTtH', 'thread_iWaQkvtth6ywQAtLGlvGZBFG', 'thread_xmtcrcn3fT9p50HY4wsTEEkA', 'thread_1O9Ur5adC9rJ0OWWC5AlXlO2', 'thread_22xf6lcUSVPIRVsxzwe99MDx']"
7,279.05505537986755,24,True,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _owner == _tokenOwner[_tokenId]
    /// @notice postcondition _tokenId == _tokenId
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition __verifier_old_address(_tokenApprovals[_tokenId]) != _approved || _tokenApprovals[_tokenId] == _approved
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition _tokenApprovals[_tokenId] == approved
    /// @notice postcondition forall (address addr) !(addr == approved && _tokenOwner[_tokenId] == __verifier_old_address(addr)) || _tokenApprovals[_tokenId] == addr
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == _operator
    /// @notice postcondition _approved == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Verified'}",[],"['thread_ZHZ8fF3xnPG9hTnCKlKqyvOz', 'thread_rQzGmwJRC3mWcroUtm53mjVo', 'thread_mEn7Yn7nTt9aMFmhmR3HVqME', 'thread_a1ycWAMM56jKUv2wN9d66apv', 'thread_GmmX1U8iInFe7wM4II2LnmCz', 'thread_QiifgqJGhOiKVgzWKrcaZjYY', 'thread_tWqlIuHkdqe63a03fJu9ycxc', 'thread_kLGIrl73N54wQXQMRu1ZEroY', 'thread_FIa2jHd8DA8uQSrPRzsItIB6']"
8,242.36925721168518,20,True,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _owner == _tokenOwner[_tokenId]
    /// @notice postcondition _tokenId != 0 || _owner != address(0)
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition __verifier_old_address(_tokenApprovals[_tokenId]) != _approved || _tokenApprovals[_tokenId] == _approved
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition _tokenApprovals[_tokenId] == approved || _tokenApprovals[_tokenId] != approved
    /// @notice postcondition forall (address x) !(x == approved && x == __verifier_old_address(_tokenOwner[_tokenId])) || _tokenOwner[_tokenId] == x
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == _operator && _approved == _approved
    /// @notice postcondition _operatorApprovals[__verifier_old_address(msg.sender)][_operator] != _approved || _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Verified'}",[],"['thread_9UdjbCnuBUyASCKh7UB1aEMi', 'thread_Q1MQUBiTrxVtrBkRgjuVZREF', 'thread_h2Nmp6ezgosDp8ExDSR8hVkt', 'thread_f3eNrJ7Nkdkv4qYOdMdCj91x', 'thread_JfPPRPgjM8uKPDRBF9sfRSbi', 'thread_LU1Xe376kPzU2DoLFHXHDhtW', 'thread_oZMZen8BsTaR5vmhz3wn3p0m', 'thread_JM3hZPOGKYWfOTl5E4AzvF1h', 'thread_yElejFBgPNN77ld69YyvmddJ']"
9,471.3819570541382,40,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition true
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition _tokenApprovals[_tokenId] == __verifier_old_address(_tokenApprovals[_tokenId]) || _approved != __verifier_old_address(_tokenApprovals[_tokenId])
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition _tokenApprovals[_tokenId] == approved || __verifier_old_address(_tokenApprovals[_tokenId]) == approved
    /// @notice postcondition !(0 <= _tokenId && _tokenId < 2**256 - 1) || _tokenOwner[_tokenId] != address(0)
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == _operator && _approved == _approved
    /// @notice postcondition _operatorApprovals[__verifier_old_address(msg.sender)][_operator] != _approved || _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition _from == _to || __verifier_old_address(_tokenOwner[_tokenId]) == _from || _from != _to
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from || _from == _to || _from == address(0) || _from != _to
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Failed', 'approve': 'Verified', 'getApproved': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Verified'}",[],"['thread_G6umLcbwa94vupxMsYX3qduy', 'thread_R2dqeqXxNG0vwUQwdbjL0oIV', 'thread_EEEUUx1CvvuAQk9pjuSXG45h', 'thread_eoRNAsgT0L00EN9pZplXND0y', 'thread_VcZTEh2Bg7D0LJyDlzFhClym', 'thread_SyBzgcm0wbw8kdox2iB2ECGU', 'thread_lC6y7wLIH4bgsabsEKEqgqBy', 'thread_aW8RLRxdhrYSptXRFSZWtXba', 'thread_NS5Bkk3qQU7KwiqGfVSGHUi0']"
10,347.6878311634064,29,False,"pragma solidity >=0.5.0;

contract ERC721 {

    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;
    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    mapping (uint256 => address) private _tokenOwner;
    mapping (uint256 => address) private _tokenApprovals;
    mapping (address => uint256) private _ownedTokensCount;
    mapping (address => mapping (address => bool)) private _operatorApprovals;

    // Functions
    /// @notice postcondition balance == _ownedTokensCount[_owner]
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _owner == _tokenOwner[_tokenId]
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    /// @notice postcondition _tokenApprovals[_tokenId] == __verifier_old_address(_tokenApprovals[_tokenId]) || _approved != __verifier_old_address(_tokenApprovals[_tokenId])
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition true
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operatorApprovals[msg.sender][_operator] == _approved
    /// @notice postcondition forall (address addr) !(msg.sender == addr) || _operatorApprovals[addr][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition _tokenOwner[_tokenId] == _to
    /// @notice postcondition __verifier_old_address(_tokenOwner[_tokenId]) == _from
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;

}
","{'balanceOf': 'Verified', 'ownerOf': 'Verified', 'approve': 'Verified', 'getApproved': 'Failed', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'transferFrom': 'Verified', 'safeTransferFrom': 'Verified'}",[],"['thread_71Y9IybuMidIc25W4NZiqcla', 'thread_GtMB5q1tawyxXtM4EHKgTpJF', 'thread_KNKnDh8rFZXPGVJyvLcvtMXA', 'thread_CjceCTVf1UDjwIgWkzfYo2f2', 'thread_NNs101kw9EpUQjFz3ttbLmzF', 'thread_FFAvwP60x2NVYjWMTNwqokUi', 'thread_0L82UfF1TyYssPBSfB7i5LYE', 'thread_aEzA1WRyoWlBE1xcpcuM07pi', 'thread_FtKuW7tC9QI8oH1dX8oMqvhG']"
