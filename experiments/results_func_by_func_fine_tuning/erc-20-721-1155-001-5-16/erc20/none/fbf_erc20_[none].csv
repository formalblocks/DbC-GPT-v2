run,time_taken,iterations,verified,annotated_contract,function_status,status,threads
1,243.52590084075928,17,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0 || msg.sender == _to
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || msg.sender == _to
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _value == 0 || _from == _to
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _to == _from || _value == 0
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition forall (address spender) !(spender != _spender) || _allowed[msg.sender][spender] == __verifier_old_uint(_allowed[msg.sender][spender])
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Verified', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_woJi1sFMImnlmbr1SIqyPkkE', 'thread_hl99FbEo2XaUASMOfDtuhTZc', 'thread_8MFGCxgGZEcKbszQjfXCiYUL', 'thread_PxY1QeW2XJee2cbnayqrtnce', 'thread_yc7G6FBXFqWDQl05cupNJkSQ', 'thread_wc0zbkKc0cLOixoeHD1WRE5O']"
2,132.43125581741333,10,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) || _value == 0 || _balances[msg.sender] >= __verifier_old_uint(_balances[msg.sender]) - _value
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _to == msg.sender || _value == 0
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _from == _to
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _from == _to
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition success == true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Verified', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_iMkneA9KkeiN04MzwWKes6vC', 'thread_teOD0MijjGWnHGafr8qPSo9p', 'thread_ZumFghuMGfqh1JfDxier4RkS', 'thread_q8QFGGuS0FrZFS3xKLujQlG1', 'thread_OF0E3pUoVOKjKjkSB4AUT1FQ', 'thread_BEP70febu8I8IRY3GjvWAAw1']"
3,112.76636171340942,10,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0 || _to == msg.sender
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _to == msg.sender || _value == 0
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _from == _to
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _from == _to
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition __verifier_old_uint(_allowed[msg.sender][_spender]) != _value || _allowed[msg.sender][_spender] == _value
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Verified', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_zV5YQ4uU9YwYL7oKbxdDx8nc', 'thread_r3QBF5uHIJ0gqgp4PktsbSai', 'thread_emTJ67Re5xnYSYaKxCsjVxvX', 'thread_uu7DMVqd8ZEM2PsaxWBPXR4C', 'thread_TtaSnf9GkfWVfLZ7KJvwy8HF', 'thread_SbIuzVs78QoOnE9PbT0jrYge']"
4,136.73311018943787,10,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) || _value == 0 || _balances[msg.sender] >= __verifier_old_uint(_balances[msg.sender]) - _value
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _to == msg.sender || _value == 0
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _from == _to
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _from == _to
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition success == true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Verified', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_bBh5Eu3E2zRuLGNXIkcxUAaS', 'thread_WiHXl9ZmTmZBTlJco7JLU0jh', 'thread_vHebguAKXVn1k07TaMGbWeXu', 'thread_TpoF4T5ddU4naatJfZ795pPB', 'thread_P4yPyHYMUSuGIZcySWe5kyrr', 'thread_LOBlc63T4HvK06TqOjE2Egrb']"
5,115.93559408187866,9,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) || _value == 0
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _balances[_to] == __verifier_old_uint(_balances[_to]) || _value == 0
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _from == _to || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value
    /// @notice postcondition _from == _to || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition success == true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Verified', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_OBqn2VugSiveggGQXVbquD9J', 'thread_0tBC8ULyUgZQd8k9gVAiTJnb', 'thread_X9S9yEmyuH34YAbNvbPqr93g', 'thread_pjsuDN1jGPoM10fmvs4ilhD8', 'thread_EPQtZvNy2lBjvYwOjvpoWuJB', 'thread_REAueYsEfjEbaUwUPs0gNuCf']"
6,134.45923829078674,10,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) || _value == 0 || _balances[msg.sender] >= __verifier_old_uint(_balances[msg.sender]) - _value
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) || _to == msg.sender || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _from == _to
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _from == _to
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition success == true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Verified', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_lXXjVu4CtrPBpoCx2tPsBRvI', 'thread_PUhyrj1fWFvHT7jZE95IVUfW', 'thread_cQ6tYjBfWCapTZc7IP5Lrtcq', 'thread_05EZAzMFj8guIaDvn7N0kCcW', 'thread_0PAmo4Hg3vzfd7JSiMCDaY9U', 'thread_wOv1eAl6AYZyLcSVvtWoiEzJ']"
7,150.35075497627258,13,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0 || _to == msg.sender
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _to == msg.sender || _value == 0
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _from == _to
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _from == _to
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition __verifier_old_uint(_allowed[msg.sender][_spender]) != _value || _allowed[msg.sender][_spender] == _value
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Verified', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_JgCf2dfYxgdc6ReLoBhgcsZq', 'thread_TILQcHKPXqgTP3tDqIt35T5b', 'thread_Fkg1WxBbuFLkd8pnNrf1sxxu', 'thread_X826zawmTOIesnhIm8sXX83w', 'thread_YwTnKOFhXsxVUKgw7QMGB52k', 'thread_UcdMUjPP1bOzusuKL5c9Ju6j']"
8,118.60652756690979,10,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0 || _value <= __verifier_old_uint(_balances[msg.sender])
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || msg.sender == _to
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _from == _to
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _from == _to
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition success == true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Verified', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_mcM8A0l5ek6PhNb4wfd5GTjU', 'thread_Kr4mcPqGGyjSG0rdnysK9X26', 'thread_QL2kKk7gXt84TRGQhGnbcfA5', 'thread_IeWiKnG1E82I7pCloSUhAUOL', 'thread_AczEJdkMT0DPuGzQ9v3VJper', 'thread_A132jE5lzEHitu1h4wabks1d']"
9,354.554322719574,28,False,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition false
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition false
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition forall (address spender) !(spender != _spender) || _allowed[msg.sender][spender] == __verifier_old_uint(_allowed[msg.sender][spender])
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Failed', 'transferFrom': 'Failed', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_dgAQ9vcfaIqAdALO6LY2Z13o', 'thread_LuJ0qKf9GHdIHKYPuhihuCYJ', 'thread_qNcOFxJ3DO9ug6bCvHehcrfl', 'thread_2la46e3cbGc622fF1rpF71Sa', 'thread_mreK18nBS3URBm5MGWkzNbLm', 'thread_nCyI8I01w23CBOoV90fLCWqV']"
10,142.4617156982422,12,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    event Transfer(address indexed _from, address indexed _to, uint _value);
    event Approval(address indexed _owner, address indexed _spender, uint _value);

    // Functions
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0 || _to == msg.sender
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _to == msg.sender
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _from == _to
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _from == _to
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    /// @notice postcondition success == true
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);

}
","{'totalSupply': 'Verified', 'transfer': 'Verified', 'transferFrom': 'Verified', 'approve': 'Verified', 'balanceOf': 'Verified', 'allowance': 'Verified'}",[],"['thread_9b6f3zeygK1ABKAL4g6QLW2i', 'thread_AWRSNSAmqpP6NyYDAH1EFQiT', 'thread_aeiDGyMsDTWBQGFEYhMeF9ss', 'thread_hoXYutiddKB9QTUwuSXFtFBn', 'thread_t82sG8ixCTf1UhxtHe4skY4r', 'thread_amWSUzGAFVcQwneKlStkx97g']"
