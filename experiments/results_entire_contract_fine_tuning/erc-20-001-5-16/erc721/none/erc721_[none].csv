run,time_taken,iterations,verified,annotated_contract,status
1,146.33940482139587,10,False,,[]
2,229.56516480445862,10,False,,[]
3,257.5078511238098,10,False,,[]
4,164.71676087379456,10,False,,[]
5,194.3694589138031,10,False,,[]
6,164.66296339035034,10,False,,[]
7,73.07129645347595,2,True,"pragma solidity >=0.5.0;

contract IERC721 {

    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;

    mapping (uint256 => address) private _tokenOwner;

    mapping (uint256 => address) private _tokenApprovals;

    mapping (address => uint256) private _ownedTokensCount;

    mapping (address => mapping (address => bool)) private _operatorApprovals;

    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;

    /// @notice postcondition balance == _ownedTokensCount[_owner]
    /// @notice postcondition _owner != address(0) || balance == 0
    function balanceOf(address _owner) external view returns (uint256 balance);

    /// @notice postcondition _owner == __verifier_old_address(_owner) || (_tokenId != _tokenId)
    /// @notice postcondition _owner == _tokenOwner[_tokenId]
    function ownerOf(uint256 _tokenId) external view returns (address _owner);

    /// @notice postcondition _approved == __verifier_old_address(_approved) || (_tokenId != _tokenId)
    /// @notice postcondition _tokenApprovals[_tokenId] == _approved
    function approve(address _approved, uint256 _tokenId) external;

    /// @notice postcondition approved == __verifier_old_address(approved) || (_tokenId != _tokenId)
    /// @notice postcondition approved == _tokenApprovals[_tokenId]
    function getApproved(uint256 _tokenId) external view returns (address approved);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || (_approved != _approved)
    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) external;

    /// @notice postcondition _owner == __verifier_old_address(_owner) || (_operator != _operator)
    /// @notice postcondition _operatorApprovals[_owner][_operator] == __verifier_old_bool(_operatorApprovals[_owner][_operator])
    function isApprovedForAll(address _owner, address _operator) external view returns (bool);

    /// @notice postcondition _from == __verifier_old_address(_from) || (_to != _to)
    /// @notice postcondition _tokenOwner[_tokenId] == _to
    function transferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition _from == __verifier_old_address(_from) || (_to != _to)
    /// @notice postcondition _tokenOwner[_tokenId] == _to
    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;

    /// @notice postcondition _from == __verifier_old_address(_from) || (_to != _to)
    /// @notice postcondition _tokenOwner[_tokenId] == _to
    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;
}
","[""Interaction: 2\nAddress.sol:14:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\nAddress.sol:15:9: Warning: Unused local variable.\nAddress.sol:14:5: Warning: Function state mutability can be restricted to pure\nERC165::supportsInterface: OK\nERC721::[constructor]: OK\nERC721::balanceOf: ERROR\n - ERC721_merge.sol:44:5: Postcondition 'balance >= 0' might not hold at end of function.\nERC721::ownerOf: OK\nERC721::approve: OK\nERC721::getApproved: OK\nERC721::setApprovalForAll: OK\nERC721::isApprovedForAll: OK\nERC721::transferFrom: OK\nERC721::safeTransferFrom: OK\nERC721::safeTransferFrom: OK\nIERC165::[implicit_constructor]: OK\nIERC721Receiver::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
8,164.074205160141,10,False,,[]
9,192.59426498413086,10,False,,[]
10,170.13188362121582,10,False,,[]
