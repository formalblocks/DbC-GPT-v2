run,time_taken,iterations,verified,annotated_contract,status
1,503.5129818916321,10,False,,"[""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:74:5: Postcondition '!(msg.sender == _to) || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && msg.sender != _to' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:92:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _allowed[msg.sender][_spender] != _value' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:112:5: Postcondition '!(msg.sender == _to) || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\n - ERC20_merge.sol:112:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) - _value && _from != _to' might not hold at end of function.\n - ERC20_merge.sol:112:5: Postcondition 'msg.sender != _to || _balances[_to] == __verifier_old_uint(_balances[_to])' might not hold at end of function.\n - ERC20_merge.sol:112:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) && _from == _to && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && msg.sender != _to' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:92:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _allowed[msg.sender][_spender] != _value' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:112:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) - _value && _from != _to && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:112:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) && _from == _to && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:75:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && msg.sender != _to' might not hold at end of function.\n - ERC20_merge.sol:75:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:94:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _allowed[msg.sender][_spender] != _value' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:115:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) - _value && _from != _to && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:115:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) && _from == _to && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:75:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && msg.sender != _to' might not hold at end of function.\n - ERC20_merge.sol:75:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:94:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _allowed[msg.sender][_spender] != _value' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:115:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) - _value && _from != _to && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:115:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) && _from == _to && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:76:5: Postcondition '_value <= _balances[msg.sender] || _value == 0' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && msg.sender != _to' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:95:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _allowed[msg.sender][_spender] != _value' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:118:5: Postcondition '_value <= _allowed[_from][msg.sender] || _value == 0' might not hold at end of function.\n - ERC20_merge.sol:118:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\n - ERC20_merge.sol:118:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && msg.sender != _to' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_value <= _balances[msg.sender] || _value == 0' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '!(msg.sender == _to) || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:95:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _allowed[msg.sender][_spender] != _value' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:116:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\n - ERC20_merge.sol:116:5: Postcondition 'msg.sender != _to || _balances[_to] == __verifier_old_uint(_balances[_to])' might not hold at end of function.\n - ERC20_merge.sol:116:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:116:5: Postcondition '!(msg.sender == _to) || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:76:5: Postcondition '_value <= _balances[msg.sender] || _value == 0' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && msg.sender != _to' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:95:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _allowed[msg.sender][_spender] != _value' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:116:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\n - ERC20_merge.sol:116:5: Postcondition 'msg.sender != _to || _balances[_to] == __verifier_old_uint(_balances[_to])' might not hold at end of function.\n - ERC20_merge.sol:116:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:116:5: Postcondition '!(msg.sender == _to) || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:76:5: Postcondition '_value <= _balances[msg.sender] || _value == 0' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && msg.sender != _to' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:95:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _allowed[msg.sender][_spender] != _value' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:116:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\n - ERC20_merge.sol:116:5: Postcondition 'msg.sender != _to || _balances[_to] == __verifier_old_uint(_balances[_to])' might not hold at end of function.\n - ERC20_merge.sol:116:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:116:5: Postcondition '!(msg.sender == _to) || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:76:5: Postcondition '_value <= _balances[msg.sender] || _value == 0' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && msg.sender != _to' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:95:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _allowed[msg.sender][_spender] != _value' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:116:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\n - ERC20_merge.sol:116:5: Postcondition 'msg.sender != _to || _balances[_to] == __verifier_old_uint(_balances[_to])' might not hold at end of function.\n - ERC20_merge.sol:116:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:116:5: Postcondition '!(msg.sender == _to) || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
2,426.3948323726654,10,False,,"[""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:75:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:75:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:95:5: Postcondition '_allowed[msg.sender][_spender] == _value && _value > __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ERC20_merge.sol:95:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) - _value && _value < __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:118:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _from != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:118:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _from == msg.sender' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:96:5: Postcondition '_allowed[msg.sender][_spender] == _value && _value > __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ERC20_merge.sol:96:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) - _value && _value < __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:120:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _from != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:120:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _from == msg.sender' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:77:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\n - ERC20_merge.sol:77:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:97:5: Postcondition '_allowed[msg.sender][_spender] == _value && _value > __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ERC20_merge.sol:97:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) - _value && _value < __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ERC20_merge.sol:97:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value && _value > 0' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:121:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _from != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:121:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _from == msg.sender' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:77:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\n - ERC20_merge.sol:77:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:97:5: Postcondition '_allowed[msg.sender][_spender] == _value && _value > __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ERC20_merge.sol:97:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) - _value && _value < __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ERC20_merge.sol:97:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value && _value > 0' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:121:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _from != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:121:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _from == msg.sender' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:77:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\n - ERC20_merge.sol:77:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:97:5: Postcondition '_allowed[msg.sender][_spender] == _value && _value > __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ERC20_merge.sol:97:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) - _value && _value < __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ERC20_merge.sol:97:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value && _value > 0' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:121:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _from != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:121:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _from == msg.sender' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:78:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:78:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:98:5: Postcondition '_allowed[msg.sender][_spender] == _value && _value > __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ERC20_merge.sol:98:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) - _value && _value < __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ERC20_merge.sol:98:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value && _value > 0' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:122:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _from != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:122:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _from == msg.sender' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:79:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\n - ERC20_merge.sol:79:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:99:5: Postcondition '_allowed[msg.sender][_spender] == _value && _value > __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ERC20_merge.sol:99:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) - _value && _value < __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ERC20_merge.sol:99:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value && _value > 0' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:123:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _from != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:123:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _from == msg.sender' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:78:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:78:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:98:5: Postcondition '_allowed[msg.sender][_spender] == _value && _value > __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ERC20_merge.sol:98:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) - _value && _value < __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ERC20_merge.sol:98:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value && _value > 0' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:122:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _from != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:122:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _from == msg.sender' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:79:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:79:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:99:5: Postcondition '_allowed[msg.sender][_spender] == _value && _value > __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ERC20_merge.sol:99:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) - _value && _value < __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ERC20_merge.sol:99:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value && _value > 0' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:123:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _from != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:123:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _from == msg.sender' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
3,426.7373380661011,10,False,,"[""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:73:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:73:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:91:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _allowed[msg.sender][_spender] != _value' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:111:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _from != msg.sender && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:111:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _from != msg.sender && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:73:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && _to != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:73:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && _to != msg.sender' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:92:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _allowed[msg.sender][_spender] != _value' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:112:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _from != msg.sender && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:112:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _from != msg.sender && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && _to != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && _to != msg.sender' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:94:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _allowed[msg.sender][_spender] != _value' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _from != msg.sender && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _from != msg.sender && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:73:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && _to != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:73:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && _to != msg.sender' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:92:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _allowed[msg.sender][_spender] != _value' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:112:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _from != msg.sender && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:112:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _from != msg.sender && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && _to != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && _to != msg.sender' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:94:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _allowed[msg.sender][_spender] != _value' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _from != msg.sender && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _from != msg.sender && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && _to != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && _to != msg.sender' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:94:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _allowed[msg.sender][_spender] != _value' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _from != msg.sender && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _from != msg.sender && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && _to != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && _to != msg.sender' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:94:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _allowed[msg.sender][_spender] != _value' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _from != msg.sender && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _from != msg.sender && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && _to != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && _to != msg.sender' might not hold at end of function.\nERC20::approve: ERROR\n - ERC20_merge.sol:94:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _allowed[msg.sender][_spender] != _value' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _from != msg.sender && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _from != msg.sender && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
4,480.3905370235443,10,False,,"[""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:72:5: Postcondition 'forall (address x) (x != msg.sender) || _balances[x] == __verifier_old_uint(_balances[x])' might not hold at end of function.\n - ERC20_merge.sol:72:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:105:5: Postcondition '!(msg.sender == _to) || _balances[_from] == __verifier_old_uint(_balances[_from])' might not hold at end of function.\n - ERC20_merge.sol:105:5: Postcondition 'forall (address x) (x != _from) || _balances[x] == __verifier_old_uint(_balances[x])' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:72:5: Postcondition 'forall (address x) (x != msg.sender) || _balances[x] == __verifier_old_uint(_balances[x])' might not hold at end of function.\n - ERC20_merge.sol:72:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:105:5: Postcondition '!(msg.sender == _to) || _balances[_from] == __verifier_old_uint(_balances[_from])' might not hold at end of function.\n - ERC20_merge.sol:105:5: Postcondition 'forall (address x) (x != _from) || _balances[x] == __verifier_old_uint(_balances[x])' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:72:5: Postcondition 'forall (address x) (x != msg.sender) || _balances[x] == __verifier_old_uint(_balances[x])' might not hold at end of function.\n - ERC20_merge.sol:72:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:105:5: Postcondition '!(msg.sender == _to) || _balances[_from] == __verifier_old_uint(_balances[_from]) || _value == 0' might not hold at end of function.\n - ERC20_merge.sol:105:5: Postcondition 'forall (address x) (x != _from) || _balances[x] == __verifier_old_uint(_balances[x])' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:72:5: Postcondition 'forall (address x) (x != msg.sender) || _balances[x] == __verifier_old_uint(_balances[x])' might not hold at end of function.\n - ERC20_merge.sol:72:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:105:5: Postcondition '_from == msg.sender || _balances[_from] == __verifier_old_uint(_balances[_from]) || _value == 0' might not hold at end of function.\n - ERC20_merge.sol:105:5: Postcondition 'forall (address x) (x != _from) || _balances[x] == __verifier_old_uint(_balances[x])' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:72:5: Postcondition 'forall (address x) (x != msg.sender) || _balances[x] == __verifier_old_uint(_balances[x])' might not hold at end of function.\n - ERC20_merge.sol:72:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:105:5: Postcondition '_from == msg.sender || _balances[_from] == __verifier_old_uint(_balances[_from]) || _value == 0' might not hold at end of function.\n - ERC20_merge.sol:105:5: Postcondition 'forall (address x) (x != _from) || _balances[x] == __verifier_old_uint(_balances[x])' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:72:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:105:5: Postcondition '_from == msg.sender || _balances[_from] == __verifier_old_uint(_balances[_from]) || _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:71:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0' might not hold at end of function.\n - ERC20_merge.sol:71:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) || _to == msg.sender' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:103:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) || _from == msg.sender || _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:71:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0' might not hold at end of function.\n - ERC20_merge.sol:71:5: Postcondition '_to == msg.sender || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender])' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:103:5: Postcondition '_from == msg.sender || _balances[_from] == __verifier_old_uint(_balances[_from])' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:72:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0' might not hold at end of function.\n - ERC20_merge.sol:72:5: Postcondition '_to == msg.sender || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender])' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:105:5: Postcondition '_from == msg.sender || _balances[_from] == __verifier_old_uint(_balances[_from])' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
5,514.3206861019135,10,False,,"[""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:110:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:110:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:74:5: Postcondition 'forall (address x) (_to == x) || _balances[x] == __verifier_old_uint(_balances[x]) ' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:110:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:110:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:75:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to' might not hold at end of function.\n - ERC20_merge.sol:75:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && msg.sender == _to' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:112:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:112:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && msg.sender == _to' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && msg.sender == _to' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && msg.sender == _to' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:76:5: Postcondition '_value <= _balances[msg.sender] || msg.sender == _to' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && msg.sender == _to' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && msg.sender == _to' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:112:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:112:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0 && msg.sender == _to' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:112:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:112:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
6,114.63981652259827,2,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /**
    * Returns the total token supply.
    */
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /**
    * Transfers `_value` amount of tokens to address `_to`, and MUST fire the `Transfer` event.
    * The function SHOULD `throw` if the message caller's account balance does not have enough tokens to spend.

    * *Note* Transfers of 0 values MUST be treated as normal transfers and fire the `Transfer` event.
    */
    /// @notice postcondition _to == msg.sender || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _to != msg.sender && _value > 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0
    function transfer(address _to, uint256 _value) public returns (bool success);

    /**
    * Transfers `_value` amount of tokens from address `_from` to address `_to`, and MUST fire the `Transfer` event.
    * The `transferFrom` method is used for a withdraw workflow, allowing contracts to transfer tokens on your behalf.
    * This can be used for example to allow a contract to transfer tokens on your behalf and/or to charge fees in sub-currencies.
    * The function SHOULD `throw` unless the `_from` account has deliberately authorized the sender of the message via some mechanism.
    * *Note* Transfers of 0 values MUST be treated as normal transfers and fire the `Transfer` event.
    */
    /// @notice postcondition _from == _to || _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _from != _to && _value > 0 || _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0 || _from == msg.sender
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /**
    * Allows `_spender` to withdraw from your account multiple times, up to the `_value` amount. If this function is called again it overwrites the current allowance with `_value`.
    */
    /// @notice postcondition success == true
    /// @notice postcondition _allowed[msg.sender][_spender] == _value || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _spender == msg.sender
    function approve(address _spender, uint256 _value) public returns (bool success);

    /**
    * Returns the account balance of another account with address `_owner`.
    */
    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /**
    * Returns the amount which `_spender` is still allowed to withdraw from `_owner`.
    */
    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
","[""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:71:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _to != msg.sender && _value > 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _to == msg.sender' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:103:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _from != _to && _value > 0 || _from == _to && _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) || _from == msg.sender' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
7,264.9307918548584,10,False,,"[""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:72:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:108:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && success && _from != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:108:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) && (_from == _to || !success)' might not hold at end of function.\n - ERC20_merge.sol:108:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) - _value && success && _from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:72:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:108:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && success && _from != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:108:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) || (_from == _to && !success)' might not hold at end of function.\n - ERC20_merge.sol:108:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) - _value && success && _from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:72:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0 && msg.sender != _to || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:108:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && success && _from != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:108:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) || (_from == _to && !success)' might not hold at end of function.\n - ERC20_merge.sol:108:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) - _value && success && _from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:108:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && success && _from != msg.sender' might not hold at end of function.\n - ERC20_merge.sol:108:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) || (_from == _to && !success)' might not hold at end of function.\n - ERC20_merge.sol:108:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) - _value && success && _from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:108:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) || (_from == _to && !success)' might not hold at end of function.\n - ERC20_merge.sol:108:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) - _value && success && _from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:109:5: Postcondition '!(success) || (_from != msg.sender) || _balances[_from] == __verifier_old_uint(_balances[_from])' might not hold at end of function.\n - ERC20_merge.sol:109:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) - _value && success && _from != _to' might not hold at end of function.\n - ERC20_merge.sol:109:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) || (_from == _to && !success)' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
8,90.0307514667511,2,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /**
    * Returns the total token supply.
    */
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /**
    * Transfers `_value` amount of tokens to address `_to`, and MUST fire the `Transfer` event.
    * The function SHOULD `throw` if the message caller's account balance does not have enough tokens to spend.

    * *Note* Transfers of 0 values MUST be treated as normal transfers and fire the `Transfer` event.
    */
    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender])
    /// @notice postcondition msg.sender == _to || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _value == 0
    function transfer(address _to, uint256 _value) public returns (bool success);

    /**
    * Transfers `_value` amount of tokens from address `_from` to address `_to`, and MUST fire the `Transfer` event.
    * The `transferFrom` method is used for a withdraw workflow, allowing contracts to transfer tokens on your behalf.
    * This can be used for example to allow a contract to transfer tokens on your behalf and/or to charge fees in sub-currencies.
    * The function SHOULD `throw` unless the `_from` account has deliberately authorized the sender of the message via some mechanism.
    * *Note* Transfers of 0 values MUST be treated as normal transfers and fire the `Transfer` event.
    */
    /// @notice postcondition _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value || _from == msg.sender
    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _value == 0 || _balances[_from] == __verifier_old_uint(_balances[_from])
    /// @notice postcondition _from == _to || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _value == 0
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /**
    * Allows `_spender` to withdraw from your account multiple times, up to the `_value` amount. If this function is called again it overwrites the current allowance with `_value`.
    */
    /// @notice postcondition success == true
    /// @notice postcondition _allowed[msg.sender][_spender] == _value || __verifier_old_uint(_allowed[msg.sender][_spender]) != _value
    function approve(address _spender, uint256 _value) public returns (bool success);

    /**
    * Returns the account balance of another account with address `_owner`.
    */
    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /**
    * Returns the amount which `_spender` is still allowed to withdraw from `_owner`.
    */
    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
","[""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:71:5: Postcondition '_balances[_to] == __verifier_old_uint(_balances[_to]) + _value || msg.sender != _to' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:105:5: Postcondition '_balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
9,293.8839876651764,10,False,,"[""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && msg.sender == _to' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:110:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && !success' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:73:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && msg.sender == _to' might not hold at end of function.\n - ERC20_merge.sol:73:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:109:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && !success' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:73:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && msg.sender == _to' might not hold at end of function.\n - ERC20_merge.sol:73:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:109:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && !success' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && msg.sender == _to' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:111:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && !success' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:75:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && msg.sender == _to' might not hold at end of function.\n - ERC20_merge.sol:75:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:112:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && !success' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && msg.sender == _to' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:111:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && !success' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && msg.sender == _to' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '!(msg.sender == _to) || _balances[msg.sender] < __verifier_old_uint(_balances[msg.sender])' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:111:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && !success' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && msg.sender == _to' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:111:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && !success' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && msg.sender == _to' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:111:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && !success' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
10,274.1945526599884,10,False,,"[""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:73:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:73:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:109:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\n - ERC20_merge.sol:109:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:111:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:111:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:111:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:111:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:111:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:111:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\n - ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:111:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:111:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:75:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\n - ERC20_merge.sol:75:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:113:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:113:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:75:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\n - ERC20_merge.sol:75:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:113:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\n - ERC20_merge.sol:113:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:114:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:76:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && _value == 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ERC20_merge.sol:115:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && _value > 0' might not hold at end of function.\n - ERC20_merge.sol:115:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
